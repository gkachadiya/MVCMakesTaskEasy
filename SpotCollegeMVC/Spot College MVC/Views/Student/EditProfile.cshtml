@using SpotCollege.DAL.DataModels
@using SpotCollege.Common
@{
    ViewBag.Title = "EditProfile";
    if (CookieHelper.UserType == ((int)LoginTypes.Admin).ToString())
    {
        Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    HtmlHelper.ClientValidationEnabled = true;
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;
}
@model StudentProfileModel
<script type="text/javascript">
    $(document).ready(function () {
        $('[placeholder]').focus(function () {
            var input = $(this);
            if (input.val() == input.attr('placeholder')) {
                input.val('');
                input.removeClass('placeholder');
            }
        }).blur(function () {
            var input = $(this);
            if (input.val() == '' || input.val() == input.attr('placeholder')) {
                input.addClass('placeholder');
                input.val(input.attr('placeholder'));
            }
        }).blur().parents('form').submit(function () {
            $(this).find('[placeholder]').each(function () {
                var input = $(this);
                if (input.val() == input.attr('placeholder')) {
                    input.val('');
                }
            })
        });
    });
</script>
<div class="row-fluid">
    <div class="span12">
        <div id="dialog-AlertIncompleteProfile" title="Alert! Incomplete profile" style="display: none;">
            <p>
                <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
                Dear [@ViewBag.IntTestStudentName], in order to reduce spam, we require all students to complete some basic profile information.
            </p>
            <p>
                Kindly ensure that you have entered atleast one school information under the<b> “Current Academics”</b> section of your profile. 
Also ensure that you have completed <b>“Education Preferences”</b> section of your profile. Completing both the above will
Activate your profile.
            </p>
            <p>
                <b>Please note:</b><br />
                Your profile information is private and not visible to other students. 
This information is made visible only to universities.
For more details refer to our FAQ page

            </p>
        </div>
        <div id="dialog-confirm" title="Delete" style="display: none;">
            <p><span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>Are you sure?</p>
        </div>
        <div id="dialog-CompleteProfile" title="Profile" style="display: none;">
            <p>
                <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
                Congratualtions on filling your profile. 
                            Please click OK to continue
            </p>
        </div>
        <div id="dialog-SaveTest" title="Hi @ViewBag.IntTestStudentName" style="display: none;">
            <p>Your International Test scores Have been saved</p>
        </div>
        <div class="pattern_box box_space">
            <div class="row-fluid">
                <div id="LoadingImage" style="display: none" class="modal_loder">
                    @*<img id="Image1" src="~/Images/ajaxloader.gif" />*@
                </div>

                <div class="span3 first">
                    <div class="shadowbox">
                        <div class="h2_heading">
                            <h2>Core Profile</h2>
                        </div>
                        <div class="paddingbox">
                            <div id="pnlHeaderLinks">
                                <ul class="list_1" id="tabNavigation">
                                    <li id="basic">
                                        @Html.ActionLink("The Basics", "EditProfile/basic", "Student")
                                    </li>
                                    <li id="CurrentAcademic">
                                        @if (ViewBag.isBasicDetailComplete == true || string.IsNullOrEmpty(Convert.ToString(ViewBag.isBasicDetailComplete)))
                                        {
                                            @Html.ActionLink("Current Academics", "EditProfile/CurrentAcademic", "Student")
                                        }
                                        else
                                        {
                                            <a>Current Academics</a>
                                        }
                                    </li>
                                    <li id="Test">
                                        @if (ViewBag.isBasicDetailComplete == true || string.IsNullOrEmpty(Convert.ToString(ViewBag.isBasicDetailComplete)))
                                        {
                                            @Html.ActionLink("International Test", "EditProfile/Test", "Student")
                                        }
                                        else
                                        {
                                            <a>International Test</a>
                                        }

                                    </li>
                                    <li id="EduPref">
                                        @if (ViewBag.isBasicDetailComplete == true || string.IsNullOrEmpty(Convert.ToString(ViewBag.isBasicDetailComplete)))
                                        {
                                            @Html.ActionLink("Education Preferences", "EditProfile/EduPref", "Student")
                                        }
                                        else
                                        {
                                            <a>Education Preferences</a>
                                        }

                                    </li>
                                    <li id="Photo">
                                        @if (ViewBag.isBasicDetailComplete == true || string.IsNullOrEmpty(Convert.ToString(ViewBag.isBasicDetailComplete)))
                                        {
                                            @Html.ActionLink("Photo", "EditProfile/Photo", "Student")
                                        }
                                        else
                                        {
                                            <a>Photo</a>
                                        }

                                    </li>
                                    <li id="WorkHistory">
                                        @if (ViewBag.isBasicDetailComplete == true || string.IsNullOrEmpty(Convert.ToString(ViewBag.isBasicDetailComplete)))
                                        {
                                            @Html.ActionLink("Work history", "EditProfile/WorkHistory", "Student")
                                        }
                                        else
                                        {
                                            <a>Work history</a>
                                        }
                                    </li>
                                    <li id="ExtraActivity">
                                        @if (ViewBag.isBasicDetailComplete == true || string.IsNullOrEmpty(Convert.ToString(ViewBag.isBasicDetailComplete)))
                                        {
                                            @Html.ActionLink("Extra Curricular Activies", "EditProfile/ExtraActivity", "Student")
                                        }
                                        else
                                        {
                                            <a>Extra Curricular Activies</a>
                                        }

                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>

                @{
                    //this code snippet is used to manage tab
                    if (ViewBag.Current == null)
                    {
                        if (ViewContext.RouteData.Values["id"] != null)
                        {
                            ViewBag.Current = ViewContext.RouteData.Values["id"];
                        }
                        else
                        {
                            ViewBag.Current = "basic";
                        }
                    }
                }

                <div class="span9">

                    @if (ViewBag.Current == "CurrentAcademic")
                    {
                        <form action="/Student/EditProfile" method="post" enctype="multipart/form-data">
                            <div id="pnlCurrentAcademics">
                                @Html.HiddenFor(m => m.studentAcademic.StudentAcademicsId)
                                @Html.HiddenFor(m => m.studentAcademic.StudentId)
                                @Html.ValidationSummary(true)
                                <div id="pnlAcademicInfo">
                                    <label style="color: blue">To get best offers from Universities, please enter information for all schools attended starting with the most recent</label>
                                    <br />
                                    <span id="lblAcademicMsg" style="color: red"></span>
                                    <ul class="profile_form">
                                        <li class="row-fluid">
                                            <div class="span4">
                                                <label>School name :</label>
                                            </div>
                                            <div class="span3">
                                                @Html.TextBoxFor(m => m.studentAcademic.SchoolName)
                                                @Html.ValidationMessageFor(m => m.studentAcademic.SchoolName)
                                            </div>
                                        </li>
                                        <li class="row-fluid">
                                            <div class="span4">
                                                <label>
                                                    School City :</label>
                                            </div>
                                            <div class="span3">
                                                @Html.TextBoxFor(m => m.studentAcademic.SchoolCity)
                                                @Html.ValidationMessageFor(m => m.studentAcademic.SchoolCity)
                                            </div>
                                        </li>
                                        <li class="row-fluid">
                                            <div class="span4">
                                                <label>
                                                    School Country :</label>
                                            </div>
                                            <div class="span3">

                                                @{
                        string tmp = Convert.ToString((int)EnumHelper.GetEnumValueFromDescription<CountryList>(Model.studentAcademic.SchoolCountry));
                        if (Model.studentAcademic.SchoolCountry != null && tmp == "0")
                        {
                            //To get value of enum if it does not contain description
                            CountryList cl = (CountryList)Enum.Parse(typeof(CountryList), Model.studentAcademic.SchoolCountry);
                            Model.studentAcademic.SchoolCountry = ((int)cl).ToString();
                        }
                        else
                        {
                            Model.studentAcademic.SchoolCountry = tmp;

                        }
                                                }


                                                @Html.DropDownListFor(m => m.studentAcademic.SchoolCountry, DropDownHelper.getCountry(Model.studentAcademic.SchoolCountry))
                                                @Html.ValidationMessageFor(m => m.studentAcademic.SchoolCountry)
                                            </div>
                                        </li>
                                        <li class="row-fluid">
                                            <div class="span4">
                                                <label>
                                                    Did you graduate :</label>
                                            </div>
                                            <div class="span3">
                                                <ul class="list_6">
                                                    <li>
                                                        @{
                        var graduate = Model.studentAcademic.Graduate;
                                                        }
                                                        @if (graduate == 1)
                                                        {
                                                            @Html.RadioButtonFor(m => m.studentAcademic.Graduate, "1", new { @checked = "checked", @id = "Yes", @class = "rdo" })
                                                        }
                                                        else
                                                        {
                                                            @Html.RadioButtonFor(m => m.studentAcademic.Graduate, "1", new { @id = "Yes", @class = "rdo" })
                                                        }
                                                        @Html.Label("Yes")
                                                    </li>
                                                    <li>
                                                        @if (graduate == 2 || graduate == 0)
                                                        {
                                                            @Html.RadioButtonFor(m => m.studentAcademic.Graduate, "2", new { @checked = "checked", @id = "No", @class = "rdo" });
                                                        }
                                                        else
                                                        {
                                                            @Html.RadioButtonFor(m => m.studentAcademic.Graduate, "2", new { @id = "No", @class = "rdo" });
                                                        }
                                                        @Html.Label("No")
                                                    </li>
                                                    <li>
                                                        @if (graduate == 3)
                                                        {
                                                            @Html.RadioButtonFor(m => m.studentAcademic.Graduate, "3", new { @checked = "checked", @id = "OnGoing", @class = "rdo" });
                                                        }
                                                        else
                                                        {
                                                            @Html.RadioButtonFor(m => m.studentAcademic.Graduate, "3", new { @id = "OnGoing", @class = "rdo" });
                                                        }
                                                        @Html.Label("OnGoing")

                                                    </li>
                                                </ul>
                                            </div>
                                        </li>
                                        <li class="row-fluid">
                                            <div id="pnlGraduateDetail" class="pnlGraduate" style="display: @((graduate == 1) ? "inline" : "none")">
                                                <ul class="profile_form">
                                                    <li class="row-fluid">
                                                        <div class="span4">
                                                            <label>
                                                                Year of graudation :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.DropDownListFor(m => m.studentAcademic.GraduationYear, DropDownHelper.getYears((Model.studentAcademic.GraduationYear.HasValue ? Model.studentAcademic.GraduationYear.Value : 0), 1985, DateTime.Now.Year))
                                                            <span id="lblyeargradution" style="display: none;" class="field-validation-error">Please Select Any</span>
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span4">
                                                            <label>
                                                                Level completed :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.DropDownListFor(m => m.studentAcademic.GraduationLevel, DropDownHelper.getLevelsofEducation((Model.studentAcademic.GraduationLevel.HasValue ? Model.studentAcademic.GraduationLevel.Value : 0)))
                                                            <span id="lbllevelcompleted" style="display: none;" class="field-validation-error">Please Select Any"</span>
                                                        </div>
                                                    </li>
                                                </ul>
                                            </div>

                                            <div id="pnlongoing" class="pnlGraduate" style="display: @((graduate == 3) ? "inline" : "none")">
                                                <ul class="profile_form">
                                                    <li class="row-fluid">
                                                        <div class="span4">
                                                            <label>
                                                                Degree being pursued :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.DropDownListFor(m => m.studentAcademic.DegreebeingPursued, DropDownHelper.getDegree((Model.studentAcademic.DegreebeingPursued.HasValue ? Model.studentAcademic.DegreebeingPursued.Value : 0)))
                                                            <span id="lbldegreepusued" style="display: none;" class="field-validation-error">Please Select Any</span>
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span4">
                                                            <label>
                                                                Expected year of graduation :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.DropDownListFor(m => m.studentAcademic.ExpectedYearofGraduation, DropDownHelper.getYears((Model.studentAcademic.ExpectedYearofGraduation.HasValue ? Model.studentAcademic.ExpectedYearofGraduation.Value : 0), DateTime.Now.Year, DateTime.Now.Year + 8))
                                                            <span id="lblexpectedgraduation"
                                                                style="display: none;" class="field-validation-error">Please Select Any</span>
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span4">
                                                            <label>
                                                                Field of Study :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.studentAcademic.FieldofStudy)
                                                            <span id="lblfieldofstudy"
                                                                style="display: none;" class="field-validation-error">Please Enter Study</span>
                                                        </div>
                                                    </li>
                                                </ul>
                                            </div>
                                        </li>
                                        <li class="row-fluid">
                                            <div class="span4">
                                                <label>
                                                    GPA or Ranking in class :</label>
                                            </div>
                                            <div class="span3">
                                                @Html.TextBoxFor(m => m.studentAcademic.Rank)
                                                @Html.ValidationMessageFor(m => m.studentAcademic.Rank)
                                            </div>
                                        </li>
                                        <li class="row-fluid">
                                            <div class="span4">
                                                <label>
                                                    Certificate :</label>
                                            </div>
                                            <div class="span4">
                                                @Html.TextBoxFor(m => m.studentAcademic.fileupload, new { type = "file" })
                                            </div>
                                        </li>
                                        <li class="row-fluid">
                                            <div class="span4">
                                            </div>
                                            <div class="span5">
                                                <input type="submit" name="btnSaveAcademic" id="btnSaveAcademic" value="Add To List" class="large_button" />

                                            </div>
                                        </li>
                                    </ul>
                                </div>

                                <div id="pnlAcademicDetails">
                                    @if (Model.studentAcademicList.Count != 0)
                                    {
                                        <table class="simple_table box" cellspacing="0" border="1" style="border-collapse: collapse;" id="grvAcademicDetails" rules="all">
                                            <tr>
                                                <th style="width: 7%;" scope="col">Delete</th>
                                                <th style="width: 10%;" scope="col">School Name</th>
                                                <th style="width: 10%;" scope="col">School City</th>
                                                <th style="width: 10%;" scope="col">School Country</th>
                                                <th style="width: 10%;" scope="col">Graduate</th>
                                                <th style="width: 10%;" scope="col">Graduation Year</th>
                                                <th style="width: 17%;" scope="col">GraduationLevel</th>
                                                <th style="width: 5%;" scope="col">Rank</th>
                                                <th style="width: 10%;" scope="col">Certificate</th>
                                            </tr>
                                            @foreach (var r in Model.studentAcademicList)
                                            {
                                                <tr>
                                                    <td style="width: 7%;">
                                                        <a href="javascript:void(0)" onclick="javascript:AcademicDelete('@r.StudentAcademicsId',this,'@r.SchoolName')" id="@("delete" + @r.StudentAcademicsId)">Delete</a>
                                                    </td>
                                                    <td style="width: 10%;">
                                                        <a href="/Student/EditProfile?academic=@r.StudentAcademicsId">@r.SchoolName</a>
                                                    </td>
                                                    <td style="width: 10%;">@r.SchoolCity</td>
                                                    <td style="width: 10%;">@r.SchoolCountry</td>
                                                    <td style="width: 10%;">
                                                        <span>@EnumHelper.GetDescriptionFromEnumValue((GraduateStatus)@r.Graduate)</span>
                                                    </td>
                                                    <td style="width: 10%;">@r.GraduationYear</td>
                                                    <td style="width: 17%;">
                                                        <span>
                                                            @if (@r.GraduationLevel != null)
                                                            {
                                                                @EnumHelper.GetDescriptionFromEnumValue((LevelCompleted)@r.GraduationLevel)
                                                            }
                                                        </span>
                                                    </td>
                                                    <td style="width: 5%;">@r.Rank</td>
                                                    <td style="width: 10%;">
                                                        @{
                                                            var img = "";
                                                            if (r.CertificatePath != null)
                                                            {
                                                                img = "../../Images/Certificate/" + r.CertificatePath;
                                                            }
                                                        }
                                                        <a class="preview" id="grvAcademicDetails_hovercertificate_0" target="_blank" href="@img">
                                                            <img width="30" height="30" src="@img" class="large_images" id="imgCertificate">
                                                        </a>
                                                    </td>
                                                </tr>
                                            }
                                        </table>
                                    }
                                </div>

                                <a class="large_button fright" href="/Student/EditProfile/Test">Next section</a>
                            </div>
                        </form>
                    }
                    else if (ViewBag.Current == "Test")
                    {
                        <div id="pnlInternationalTest" class="ui_form">
                            <div class="width100per">
                                <div class="shadowbox">
                                    <div class="h2_heading">
                                        <h2>ACT</h2>
                                        <a href="javascript:OpenACT()" class="add_btn fright">Add a score</a>
                                    </div>
                                    <ul id="ulACT" class="list_4">
                                        @foreach (var r in Model.testList.testList.Where(x => x.TestId == 2))
                                        {
                                            <li>
                                                <a href="javascript:OpenACTEdit('@r.StudentTestId')" id='@("editact" + r.StudentTestId)'>ACT-@r.Date </a>
                                                <a href="javascript:ACTDelete('@r.StudentTestId')" id='@("deleteact" + r.StudentTestId)' class="delete">Delete</a>
                                            </li>
                                        }
                                    </ul>
                                    @*<%--For ACT--%>*@
                                    <div id="ActHideShow">
                                        <div title="ACT" id="divACT" style="display: none">
                                            <div id="pnlACT" class="ui_form">
                                                <form id="frmACT" onsubmit="return false;">
                                                    @Html.HiddenFor(m => m.testList.testAct.StudentTestId)
                                                    <ul class="profile_form left_right_space">
                                                        <li class="row-fluid">
                                                            <div class="span3">
                                                                <label>Composite :</label>
                                                            </div>
                                                            <div class="span3">
                                                                @Html.TextBoxFor(m => m.testList.testAct.Composite)
                                                                @Html.ValidationMessageFor(m => m.testList.testAct.Composite)
                                                            </div>
                                                        </li>
                                                        <li class="row-fluid">
                                                            <div class="span3">
                                                                <label>
                                                                    English :</label>
                                                            </div>
                                                            <div class="span3">
                                                                @Html.TextBoxFor(m => m.testList.testAct.English)
                                                                @Html.ValidationMessageFor(m => m.testList.testAct.English)
                                                            </div>
                                                        </li>
                                                        <li class="row-fluid">
                                                            <div class="span3">
                                                                <label>
                                                                    Math :</label>
                                                            </div>
                                                            <div class="span3">
                                                                @Html.TextBoxFor(m => m.testList.testAct.Math)
                                                                @Html.ValidationMessageFor(m => m.testList.testAct.Math)

                                                            </div>
                                                        </li>
                                                        <li class="row-fluid">
                                                            <div class="span3">
                                                                <label>
                                                                    Reading :</label>
                                                            </div>
                                                            <div class="span3">
                                                                @Html.TextBoxFor(m => m.testList.testAct.Reading)
                                                                @Html.ValidationMessageFor(m => m.testList.testAct.Reading)
                                                            </div>
                                                        </li>
                                                        <li class="row-fluid">
                                                            <div class="span3">
                                                                <label>
                                                                    Science :</label>
                                                            </div>
                                                            <div class="span3">
                                                                @Html.TextBoxFor(m => m.testList.testAct.Science)
                                                                @Html.ValidationMessageFor(m => m.testList.testAct.Science)
                                                            </div>
                                                        </li>
                                                        <li class="row-fluid">
                                                            <div class="span3">
                                                                <label>
                                                                    Writing :</label>
                                                            </div>
                                                            <div class="span3">
                                                                @Html.TextBoxFor(m => m.testList.testAct.Writing)
                                                                @Html.ValidationMessageFor(m => m.testList.testAct.Writing)
                                                            </div>
                                                        </li>
                                                        <li class="row-fluid">
                                                            <div class="span3">
                                                                <label>Date :</label>
                                                            </div>
                                                            <div class="span3">
                                                                <span class="datepickericon"></span>
                                                                @Html.TextBoxFor(m => m.testList.testAct.Date)
                                                                @Html.ValidationMessageFor(m => m.testList.testAct.Date)
                                                            </div>
                                                        </li>
                                                        <li class="row-fluid">
                                                            <div class="span3">
                                                                <label></label>
                                                            </div>
                                                            <div class="span5">
                                                                <input id="btnACTSave" name="btnACTSave" value="Save" class="small_button" type="submit" />
                                                                <a href="javascript:CancelACT()" class="small_button">Cancel</a>
                                                            </div>
                                                        </li>
                                                    </ul>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="width100per">
                                <div class="shadowbox">
                                    <div class="h2_heading">
                                        <h2>SAT</h2>
                                        <a href="javascript:OpenSAT()" class="add_btn fright">Add a score</a>
                                    </div>
                                    <ul id="ulSAT" class="list_4">
                                        @foreach (var r in Model.testList.testList.Where(x => x.TestId == 3))
                                        {
                                            <li>
                                                <a href="javascript:OpenSATEdit('@r.StudentTestId')" id='@("editsat" + r.StudentTestId)'>SAT-@r.Date</a>
                                                <a href="javascript:SATDelete('@r.StudentTestId')" id='@("deletesat" + r.StudentTestId)' class="delete">Delete</a>
                                            </li>
                                        }
                                    </ul>
                                    @*<%--For SAT--%>*@
                                    <div title="SAT" id="divSAT" style="display: none">
                                        <div id="pnlSAT" class="ui_form">
                                            <form id="frmSAT" onsubmit="return false;">
                                                @Html.HiddenFor(m => m.testList.testSat.StudentTestId)
                                                <ul class="profile_form left_right_space">
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>Reading :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testSat.Reading)
                                                            @Html.ValidationMessageFor(m => m.testList.testSat.Reading)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Math :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testSat.Math)
                                                            @Html.ValidationMessageFor(m => m.testList.testSat.Math)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Writing :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testSat.Writing)
                                                            @Html.ValidationMessageFor(m => m.testList.testSat.Writing)

                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Composite :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testSat.Composite)
                                                            @Html.ValidationMessageFor(m => m.testList.testSat.Composite)
                                                        </div>
                                                    </li>

                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>Date :</label>
                                                        </div>
                                                        <div class="span3">
                                                            <span class="datepickericon"></span>
                                                            @Html.TextBoxFor(m => m.testList.testSat.Date)
                                                            @Html.ValidationMessageFor(m => m.testList.testSat.Date)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label></label>
                                                        </div>
                                                        <div class="span5">
                                                            <input id="btnSATSave" name="btnSATSave" value="Save" class="small_button" type="submit" />
                                                            <a href="javascript:CancelSAT()" class="small_button">Cancel</a>
                                                        </div>
                                                    </li>
                                                </ul>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>


                            <div class="width100per">
                                <div class="shadowbox">
                                    <div class="h2_heading">
                                        <h2>AP</h2>
                                        <a href="javascript:OpenAP()" class="add_btn fright">Add a score</a>
                                    </div>
                                    <ul id="ulAP" class="list_4">
                                        @foreach (var r in Model.testList.testList.Where(x => x.TestId == 4))
                                        {
                                            <li>
                                                <a href="javascript:OpenAPEdit('@r.StudentTestId')" id='@("editat" + r.StudentTestId)'>AP-@r.Date</a>
                                                <a href="javascript:APDelete('@r.StudentTestId')" id='@("deleteat" + r.StudentTestId)' class="delete">Delete</a>
                                            </li>
                                        }
                                    </ul>
                                    @*<%--For AP--%>*@
                                    <div title="AP" id="divAP" style="display: none">
                                        <div id="pnlAP" class="ui_form">
                                            <form id="frmAP" onsubmit="return false;">
                                                @Html.HiddenFor(m => m.testList.testAp.StudentTestId)
                                                <ul class="profile_form left_right_space">
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Subject :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testAp.Subject)
                                                            @Html.ValidationMessageFor(m => m.testList.testAp.Subject)
                                                        </div>
                                                    </li>

                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Score :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testAp.Score)
                                                            @Html.ValidationMessageFor(m => m.testList.testAp.Score)
                                                        </div>
                                                    </li>

                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Date :</label>
                                                        </div>
                                                        <div class="span3">
                                                            <span class="datepickericon"></span>
                                                            @Html.TextBoxFor(m => m.testList.testAp.Date)
                                                            @Html.ValidationMessageFor(m => m.testList.testAp.Date)
                                                        </div>
                                                    </li>

                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label></label>
                                                        </div>
                                                        <div class="span5">
                                                            <input id="btnAPSave" value="Save" class="small_button" type="submit" />
                                                            <a href="javascript:CancelAP()" class="small_button">Cancel</a>
                                                        </div>
                                                    </li>
                                                </ul>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="width100per">
                                <div class="shadowbox">
                                    <div class="h2_heading">
                                        <h2>GRE</h2>
                                        <a href="javascript:OpenGRE()" class="add_btn fright">Add a score</a>
                                    </div>
                                    <ul id="ulGRE" class="list_4">
                                        @foreach (var r in Model.testList.testList.Where(x => x.TestId == 5))
                                        {
                                            <li>
                                                <a href="javascript:OpenGREEdit('@r.StudentTestId')" id='@("editgre" + r.StudentTestId)'>GRE-@r.Date</a>
                                                <a href="javascript:GREDelete('@r.StudentTestId')" id='@("deletegre" + r.StudentTestId)' class="delete">Delete</a>
                                            </li>
                                        }
                                    </ul>
                                    @*<%--For GRE--%>*@
                                    <div title="GRE" id="divGRE" style="display: none">
                                        <div id="pnlGRE" class="ui_form">
                                            <form id="frmGRE" onsubmit="return false;">
                                                @Html.HiddenFor(m => m.testList.testGre.StudentTestId)
                                                <ul class="profile_form left_right_space">
                                                    <li class="row-fluid">
                                                        <div class="span4">
                                                            <label>Verbal Reasoning  :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testGre.VerbalReasoning)
                                                            @Html.ValidationMessageFor(m => m.testList.testGre.VerbalReasoning)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span4">
                                                            <label>Quantitative Reasoning  :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testGre.QuantitativeReasoning)
                                                            @Html.ValidationMessageFor(m => m.testList.testGre.QuantitativeReasoning)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span4">
                                                            <label>
                                                                Analytical Writing :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testGre.AnalyticalWriting)
                                                            @Html.ValidationMessageFor(m => m.testList.testGre.AnalyticalWriting)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span4">
                                                            <label>
                                                                Date :</label>
                                                        </div>
                                                        <div class="span3">
                                                            <span class="datepickericon"></span>
                                                            @Html.TextBoxFor(m => m.testList.testGre.Date)
                                                            @Html.ValidationMessageFor(m => m.testList.testGre.Date)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span4">
                                                            <label></label>
                                                        </div>
                                                        <div class="span5">
                                                            <input id="btnGRESave" value="Save" type="submit" class="small_button" />
                                                            <a href="javascript:CancelGRE()" class="small_button">Cancel</a>
                                                        </div>
                                                    </li>
                                                </ul>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>


                            <div class="width100per">
                                <div class="shadowbox">
                                    <div class="h2_heading">
                                        <h2>GMAT</h2>
                                        <a href="javascript:OpenGMAT()" class="add_btn fright">Add a score</a>
                                    </div>
                                    <ul id="ulGMAT" class="list_4">
                                        @foreach (var r in Model.testList.testList.Where(x => x.TestId == 6))
                                        {
                                            <li>
                                                <a href="javascript:OpenGMATEdit('@r.StudentTestId')" id='@("editgmat" + r.StudentTestId)'>GMAT-@r.Date</a>
                                                <a href="javascript:GMATDelete('@r.StudentTestId')" id='@("deletegmat" + r.StudentTestId)' class="delete">Delete</a>
                                            </li>
                                        }
                                    </ul>
                                    @*<%--For GMAT--%>*@
                                    <div title="GMAT" id="divGMAT" style="display: none">
                                        <div id="pnlGMAT" class="ui_form">
                                            <form id="frmGMAT" onsubmit="return false;">
                                                @Html.HiddenFor(m => m.testList.testGmat.StudentTestId)
                                                <ul class="profile_form left_right_space">
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>Verbal :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testGmat.Verbal)
                                                            @Html.ValidationMessageFor(m => m.testList.testGmat.Verbal)

                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>Quantitative :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testGmat.QuantitativeReasoning)
                                                            @Html.ValidationMessageFor(m => m.testList.testGmat.QuantitativeReasoning)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>Total :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testGmat.Total)
                                                            @Html.ValidationMessageFor(m => m.testList.testGmat.Total)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>Analytical Writing :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testGmat.AnalyticalWriting)
                                                            @Html.ValidationMessageFor(m => m.testList.testGmat.AnalyticalWriting)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>Date :</label>
                                                        </div>
                                                        <div class="span3">
                                                            <span class="datepickericon"></span>
                                                            @Html.TextBoxFor(m => m.testList.testGmat.Date)
                                                            @Html.ValidationMessageFor(m => m.testList.testGmat.Date)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label></label>
                                                        </div>
                                                        <div class="span7">
                                                            <input type="submit" id="btnGMATSave" value="Save" class="small_button" />
                                                            <a href="javascript:CancelGMAT()" class="small_button">Cancel</a>
                                                        </div>
                                                    </li>
                                                </ul>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="width100per">
                                <div class="shadowbox">
                                    <div class="h2_heading">
                                        <h2>IB</h2>
                                        <a href="javascript:OpenIB()" class="add_btn fright">Add a score</a>
                                    </div>
                                    <ul id="ulIB" class="list_4">
                                        @foreach (var r in Model.testList.testList.Where(x => x.TestId == 7))
                                        {
                                            <li>
                                                <a href="javascript:OpenIBEdit('@r.StudentTestId')" id='@("editib" + r.StudentTestId)'>IB-@r.Date</a>
                                                <a href="javascript:IBDelete('@r.StudentTestId')" id='@("deleteib" + r.StudentTestId)' class="delete">Delete</a>
                                            </li>
                                        }
                                    </ul>
                                    @*<%--For IB--%>*@
                                    <div title="IB" id="divIB" style="display: none">
                                        <div id="pnlIB" class="ui_form">
                                            <form id="frmIB" onsubmit="return false;">
                                                @Html.HiddenFor(m => m.testList.testIB.StudentTestId)
                                                <ul class="profile_form left_right_space">
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Subject :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testIB.Subject)
                                                            @Html.ValidationMessageFor(m => m.testList.testIB.Subject)
                                                        </div>
                                                    </li>

                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Score :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testIB.Score)
                                                            @Html.ValidationMessageFor(m => m.testList.testIB.Score)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Date :</label>
                                                        </div>
                                                        <div class="span3">
                                                            <span class="datepickericon"></span>
                                                            @Html.TextBoxFor(m => m.testList.testIB.Date)
                                                            @Html.ValidationMessageFor(m => m.testList.testIB.Date)
                                                        </div>
                                                    </li>

                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label></label>
                                                        </div>
                                                        <div class="span7">
                                                            <input type="submit" id="btnIBSave" value="Save" class="small_button" />
                                                            <a href="javascript:CancelIB()" class="small_button">Cancel</a>
                                                        </div>
                                                    </li>
                                                </ul>
                                            </form>
                                        </div>

                                    </div>
                                </div>
                            </div>

                            <div class="width100per">
                                <div class="shadowbox">
                                    <div class="h2_heading">
                                        <h2>IELTS</h2>
                                        <a href="javascript:OpenIELTS()" class="add_btn fright">Add a score</a>
                                    </div>
                                    <ul id="ulIELTS" class="list_4">
                                        @foreach (var r in Model.testList.testList.Where(x => x.TestId == 8))
                                        {
                                            <li>
                                                <a href="javascript:OpenIELTSEdit('@r.StudentTestId')" id='@("editielts" + r.StudentTestId)'>IELSTS-@r.Date</a>
                                                <a href="javascript:IELTSDelete('@r.StudentTestId')" id='@("deleteielts" + r.StudentTestId)' class="delete">Delete</a>
                                            </li>
                                        }
                                    </ul>
                                    @*<%--For IELTS--%>*@
                                    <div title="IELTS" id="divIELTS" style="display: none">
                                        <div id="pnlIELTS" class="ui_form">
                                            <form id="frmIELTS" onsubmit="return false;">
                                                @Html.HiddenFor(m => m.testList.testIelts.StudentTestId)
                                                <ul class="profile_form left_right_space">
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Listening :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testIelts.Listening)
                                                            @Html.ValidationMessageFor(m => m.testList.testIelts.Listening)


                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Reading :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testIelts.Reading)
                                                            @Html.ValidationMessageFor(m => m.testList.testIelts.Reading)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Writing :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testIelts.Writing)
                                                            @Html.ValidationMessageFor(m => m.testList.testIelts.Writing)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Speaking :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testIelts.Speaking)
                                                            @Html.ValidationMessageFor(m => m.testList.testIelts.Speaking)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Date :</label>
                                                        </div>
                                                        <div class="span3">
                                                            <span class="datepickericon"></span>
                                                            @Html.TextBoxFor(m => m.testList.testIelts.Date)
                                                            @Html.ValidationMessageFor(m => m.testList.testIelts.Date)
                                                        </div>
                                                    </li>

                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                        </div>
                                                        <div class="span5">
                                                            <input type="submit" id="btnIELTSSave" value="Save" class="small_button" />
                                                            <a href="javascript:CancelIELTS()" class="small_button">Cancel</a>
                                                        </div>
                                                    </li>
                                                </ul>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="width100per">
                                <div class="shadowbox">
                                    <div class="h2_heading">
                                        <h2>LSAT</h2>
                                        <a href="javascript:OpenLSAT()" class="add_btn fright">Add a score</a>
                                    </div>
                                    <ul id="ulLSAT" class="list_4">
                                        @foreach (var r in Model.testList.testList.Where(x => x.TestId == 9))
                                        {
                                            <li>
                                                <a href="javascript:OpenLSATEdit('@r.StudentTestId')" id='@("editlsat" + r.StudentTestId)'>LSAT-@r.Date</a>
                                                <a href="javascript:LSATDelete('@r.StudentTestId')" id='@("deletelsat" + r.StudentTestId)' class="delete">Delete</a>
                                            </li>
                                        }

                                    </ul>
                                    @*<%--For LSAT--%>*@
                                    <div title="LSAT" id="divLSAT" style="display: none">
                                        <div id="pnlLSAT" class="ui_form">
                                            <form id="frmLSAT" onsubmit="return false;">

                                                @Html.HiddenFor(m => m.testList.testLsat.StudentTestId)
                                                <ul class="profile_form left_right_space">
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Score :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testLsat.Score)
                                                            @Html.ValidationMessageFor(m => m.testList.testLsat.Score)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Date :</label>
                                                        </div>
                                                        <div class="span3">
                                                            <span class="datepickericon"></span>
                                                            @Html.TextBoxFor(m => m.testList.testLsat.Date)
                                                            @Html.ValidationMessageFor(m => m.testList.testLsat.Date)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label></label>
                                                        </div>
                                                        <div class="span5">
                                                            <input type="submit" id="btnLSATSave" value="Save" class="small_button" />
                                                            <a href="javascript:CancelLSAT()" class="small_button">Cancel</a>
                                                        </div>
                                                    </li>
                                                </ul>

                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="width100per">
                                <div class="shadowbox">
                                    <div class="h2_heading">
                                        <h2>MCAT</h2>
                                        <a href="javascript:OpenMCAT()" class="add_btn fright">Add a score</a>
                                    </div>
                                    <ul id="ulMCAT" class="list_4">
                                        @foreach (var r in Model.testList.testList.Where(x => x.TestId == 10))
                                        {
                                            <li>
                                                <a href="javascript:OpenMCATEdit('@r.StudentTestId')" id='@("editmcat" + r.StudentTestId)'>MCAT-@r.Date</a>
                                                <a href="javascript:MCATDelete('@r.StudentTestId')" id='@("deletemcat" + r.StudentTestId)' class="delete">Delete</a>
                                            </li>
                                        }
                                    </ul>
                                    @*<%--For MCAT--%>*@
                                    <div title="MCAT" id="divMCAT" style="display: none">
                                        <div id="pnlMCAT" class="ui_form">
                                            <form id="frmMCAT" onsubmit="return false;">
                                                @Html.HiddenFor(m => m.testList.testIB.StudentTestId)

                                                <ul class="profile_form left_right_space">
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Biology :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testMcat.Biology)
                                                            @Html.ValidationMessageFor(m => m.testList.testMcat.Biology)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Physics :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testMcat.Physics)
                                                            @Html.ValidationMessageFor(m => m.testList.testMcat.Physics)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Verbal :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testMcat.Verbal)
                                                            @Html.ValidationMessageFor(m => m.testList.testMcat.Verbal)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Writing :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testMcat.Writing)
                                                            @Html.ValidationMessageFor(m => m.testList.testMcat.Writing)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Date :</label>
                                                        </div>
                                                        <div class="span3">
                                                            <span class="datepickericon"></span>
                                                            @Html.TextBoxFor(m => m.testList.testMcat.Date)
                                                            @Html.ValidationMessageFor(m => m.testList.testMcat.Date)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                        </div>
                                                        <div class="span5">
                                                            <input type="submit" id="btnMCATSave" value="Save" class="small_button" />
                                                            <a href="javascript:CancelMCAT()" class="small_button">Cancel</a>
                                                        </div>
                                                    </li>
                                                </ul>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="width100per">
                                <div class="shadowbox">
                                    <div class="h2_heading">
                                        <h2>PSAT</h2>
                                        <a href="javascript:OpenPSAT()" class="add_btn fright">Add a score</a>
                                    </div>
                                    <ul id="ulPSAT" class="list_4">
                                        @foreach (var r in Model.testList.testList.Where(x => x.TestId == 11))
                                        {
                                            <li>
                                                <a href="javascript:OpenPSATEdit('@r.StudentTestId')" id='@("editpsat" + r.StudentTestId)'>PSAT-@r.Date</a>
                                                <a href="javascript:PSATDelete('@r.StudentTestId')" id='@("deletepsat" + r.StudentTestId)' class="delete">Delete</a>
                                            </li>
                                        }
                                    </ul>
                                    @*<%--For PSAT--%>*@
                                    <div title="PSAT" id="divPSAT" style="display: none">
                                        <div id="pnlPSAT" class="ui_form">
                                            <form id="frmPSAT" onsubmit="return false;">
                                                @Html.HiddenFor(m => m.testList.testPsat.StudentTestId)
                                                <ul class="profile_form left_right_space">
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Reading :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testPsat.Reading)
                                                            @Html.ValidationMessageFor(m => m.testList.testPsat.Reading)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Math :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testPsat.Math)
                                                            @Html.ValidationMessageFor(m => m.testList.testPsat.Math)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Writing :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testPsat.Writing)
                                                            @Html.ValidationMessageFor(m => m.testList.testPsat.Writing)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Date :</label>
                                                        </div>
                                                        <div class="span3">
                                                            <span class="datepickericon"></span>
                                                            @Html.TextBoxFor(m => m.testList.testPsat.Date)
                                                            @Html.ValidationMessageFor(m => m.testList.testPsat.Date)
                                                        </div>
                                                    </li>
                                                    <li class="row">
                                                        <div class="span3">
                                                        </div>
                                                        <div class="span5">
                                                            <input type="submit" id="btnPSATSave" value="Save" class="small_button" />
                                                            <a href="javascript:CancelPSAT()" class="small_button">Cancel</a>
                                                        </div>
                                                    </li>
                                                </ul>
                                            </form>
                                        </div>

                                    </div>
                                </div>
                            </div>

                            <div class="width100per">
                                <div class="shadowbox">
                                    <div class="h2_heading">
                                        <h2>SAT-II</h2>
                                        <a href="javascript:OpenSAT2()" class="add_btn fright">Add a score</a>
                                    </div>
                                    <ul id="ulSAT2" class="list_4">
                                        @foreach (var r in Model.testList.testList.Where(x => x.TestId == 12))
                                        {
                                            <li>
                                                <a href="javascript:OpenSAT2Edit('@r.StudentTestId')" id='@("editsat2" + r.StudentTestId)'>SAT-II-@r.Date</a>
                                                <a href="javascript:SAT2Delete('@r.StudentTestId')" id='@("deletesat2" + r.StudentTestId)' class="delete">Delete</a>
                                            </li>
                                        }
                                    </ul>
                                    @*<%--For SAT-II--%>*@
                                    <div title="SAT-II" id="divSAT2" style="display: none">
                                        <div id="pnlSAT2" class="ui_form">
                                            <form id="frmSAT2" onsubmit="return false;">
                                                @Html.HiddenFor(m => m.testList.testSat2.StudentTestId)
                                                <ul class="profile_form left_right_space">
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Subject :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testSat2.Subject)
                                                            @Html.ValidationMessageFor(m => m.testList.testSat2.Subject)

                                                        </div>
                                                    </li>

                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Score :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testSat2.Score)
                                                            @Html.ValidationMessageFor(m => m.testList.testSat2.Score)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Date :</label>
                                                        </div>
                                                        <div class="span3">
                                                            <span class="datepickericon"></span>
                                                            @Html.TextBoxFor(m => m.testList.testSat2.Date)
                                                            @Html.ValidationMessageFor(m => m.testList.testSat2.Date)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                        </div>
                                                        <div class="span5">
                                                            <input type="submit" id="btnSAT_IISave" value="Save" class="small_button" />
                                                            <a href="javascript:CancelSAT2()" class="small_button">Cancel</a>
                                                        </div>
                                                    </li>
                                                </ul>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="width100per">
                                <div class="shadowbox">
                                    <div class="h2_heading">
                                        <h2>TOEFL Internet based</h2>
                                        <a href="javascript:OpenTOEFLInternetbased()" class="add_btn fright">Add a score</a>
                                    </div>
                                    <ul id="ulTOEFLInternetbased" class="list_4">
                                        @foreach (var r in Model.testList.testList.Where(x => x.TestId == 13))
                                        {
                                            <li>
                                                <a href="javascript:OpenTOEFLInternetbasedEdit('@r.StudentTestId')" id='@("edittoefli" + r.StudentTestId)'>LSAT-@r.Date</a>
                                                <a href="javascript:TOEFLInternetbasedDelete('@r.StudentTestId')" id='@("deletetoefli" + r.StudentTestId)' class="delete">Delete</a>
                                            </li>
                                        }

                                    </ul>
                                    @*<%--For TOEFL Internet based--%>*@
                                    <div title="TOEFL Internet based" id="divTOEFLInternetbased" style="display: none">
                                        <div id="pnlTOEFLInternetbased" class="ui_form">
                                            <form id="frmTOEFLI" onsubmit="return false;">
                                                @Html.HiddenFor(m => m.testList.testToeflI.StudentTestId)

                                                <ul class="profile_form left_right_space">
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Reading :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testToeflI.Reading)
                                                            @Html.ValidationMessageFor(m => m.testList.testToeflI.Reading)

                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Listening :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testToeflI.Listening)
                                                            @Html.ValidationMessageFor(m => m.testList.testToeflI.Listening)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Speaking :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testToeflI.Speaking)
                                                            @Html.ValidationMessageFor(m => m.testList.testToeflI.Speaking)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Writing :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testToeflI.Writing)
                                                            @Html.ValidationMessageFor(m => m.testList.testToeflI.Writing)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Total :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testToeflI.Total)
                                                            @Html.ValidationMessageFor(m => m.testList.testToeflI.Total)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Date :</label>
                                                        </div>
                                                        <div class="span3">
                                                            <span class="datepickericon"></span>
                                                            @Html.TextBoxFor(m => m.testList.testToeflI.Date)
                                                            @Html.ValidationMessageFor(m => m.testList.testToeflI.Date)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                        </div>
                                                        <div class="span5">
                                                            <input type="submit" id="btnTOEFLInternetbasedSave" value="Save" class="small_button" />
                                                            <a href="javascript:CancelTOEFLInternetbased()" class="small_button">Cancel</a>
                                                        </div>
                                                    </li>
                                                </ul>
                                            </form>

                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="width100per">
                                <div class="shadowbox">
                                    <div class="h2_heading">
                                        <h2>TOEFL Paper based</h2>
                                        <a href="javascript:OpenTOEFLPaperbased()" class="add_btn fright">Add a score</a>
                                    </div>
                                    <ul id="ulTOEFLPaperbased" class="list_4">
                                        @foreach (var r in Model.testList.testList.Where(x => x.TestId == 14))
                                        {
                                            <li>
                                                <a href="javascript:OpenTOEFLPaperbasedEdit('@r.StudentTestId')" id='@("edittoeflp" + r.StudentTestId)'>LSAT-@r.Date</a>
                                                <a href="javascript:TOEFLPaperbasedDelete('@r.StudentTestId')" id='@("deletetoeflp" + r.StudentTestId)' class="delete">Delete</a>
                                            </li>
                                        }
                                    </ul>
                                    @*<%--For TOEFL Paper based--%>*@
                                    <div title="TOEFL Paper based" id="divTOEFLPaperbased" style="display: none">
                                        <div id="pnlTOEFLPaperbased" class="ui_form">
                                            <form id="frmTOEFLP" onsubmit="return false;">
                                                @Html.HiddenFor(m => m.testList.testToeflP.StudentTestId)
                                                <ul class="profile_form left_right_space">
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Reading :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testToeflP.Reading)
                                                            @Html.ValidationMessageFor(m => m.testList.testToeflP.Reading)

                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Listening :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testToeflP.Listening)
                                                            @Html.ValidationMessageFor(m => m.testList.testToeflP.Listening)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Speaking :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testToeflP.Speaking)
                                                            @Html.ValidationMessageFor(m => m.testList.testToeflP.Speaking)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Writing :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testToeflP.Writing)
                                                            @Html.ValidationMessageFor(m => m.testList.testToeflP.Writing)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Total :</label>
                                                        </div>
                                                        <div class="span3">
                                                            @Html.TextBoxFor(m => m.testList.testToeflP.Total)
                                                            @Html.ValidationMessageFor(m => m.testList.testToeflP.Total)
                                                        </div>
                                                    </li>
                                                    <li class="row-fluid">
                                                        <div class="span3">
                                                            <label>
                                                                Date :</label>
                                                        </div>
                                                        <div class="span3">
                                                            <span class="datepickericon"></span>
                                                            @Html.TextBoxFor(m => m.testList.testToeflP.Date)
                                                            @Html.ValidationMessageFor(m => m.testList.testToeflP.Date)
                                                        </div>
                                                    </li>
                                                    <li>
                                                        <div class="row-fluid">
                                                            <div class="span3">
                                                            </div>
                                                            <div class="span5">
                                                                <input type="submit" id="btnTOEFLPaperbasedSave" value="Save" class="small_button" />
                                                                <a href="javascript:CancelTOEFLPaperbased()" class="small_button">Cancel</a>
                                                            </div>
                                                        </div>
                                                    </li>
                                                </ul>
                                            </form>
                                        </div>

                                    </div>
                                </div>
                            </div>


                            <div>
                                <ul>
                                    <li class="row-fluid">
                                        <div class="span3">
                                        </div>
                                        <div class="span4">
                                            <a class="large_button" href="/Student/EditProfile/EduPref">Continue</a>
                                        </div>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    }
                    else if (ViewBag.Current == "EduPref")
                    {
                        <form method="post">
                            <div id="pnlEducationPreferences">
                                @Html.HiddenFor(m => m.studentEduPreference.StudentId)
                                <ul class="profile_form">
                                    <li class="row-fluid">
                                        <div class="span3">
                                            <label>
                                                I am currently :</label>
                                        </div>
                                        <div class="span3">
                                            @Html.DropDownListFor(m => m.studentEduPreference.StudyingIn, DropDownHelper.getCurrentlyIn(""))
                                            @Html.ValidationMessageFor(m => m.studentEduPreference.StudyingIn)
                                        </div>
                                    </li>
                                    <li class="row-fluid">
                                        <div class="span3">
                                            <label>
                                                Seeking a degree in :</label>
                                        </div>
                                        <div class="span3">
                                            @Html.DropDownListFor(m => m.studentEduPreference.LookingFor, DropDownHelper.getPrograms(0))
                                            @Html.ValidationMessageFor(m => m.studentEduPreference.LookingFor)
                                        </div>
                                    </li>
                                    <li class="row-fluid">
                                        <div class="span3">
                                            <label>
                                                I prefer to study in :</label>
                                        </div>
                                        <div class="span3">
                                            @Html.DropDownListFor(m => m.studentEduPreference.LookingForCountry, DropDownHelper.getCountry(Model.studentEduPreference.LookingForCountry))
                                            @Html.ValidationMessageFor(m => m.studentEduPreference.LookingForCountry)
                                        </div>
                                    </li>
                                    <li class="row-fluid">
                                        <div id="pnlotherstudy" class="pnlGraduate" style="display: none;">
                                            <ul class="profile_form">
                                                <li class="row-fluid">
                                                    <div class="span2">
                                                        <label>
                                                            Destination :</label>
                                                    </div>
                                                    <div class="span2">
                                                        @Html.TextBoxFor(m => m.studentEduPreference.OtherStudy)
                                                        <span id="lblotherstudy" style="display: none;" class="field-validation-error">Please Enter Destination</span>
                                                    </div>
                                                </li>
                                            </ul>
                                        </div>
                                    </li>
                                    <li class="row-fluid">
                                        <div class="span3">
                                            <label>
                                                Preferred Start Date :</label>
                                        </div>
                                        <div class="span3">
                                            @Html.DropDownListFor(m => m.studentEduPreference.StartDate, DropDownHelper.getExpectedDates(0))
                                            @Html.ValidationMessageFor(m => m.studentEduPreference.StartDate)
                                        </div>
                                    </li>
                                    <li class="row-fluid">
                                        <div class="span3">
                                            <label>
                                                I can afford to pay (per year in USD) :</label>
                                        </div>
                                        <div class="span3">
                                            @Html.DropDownListFor(m => m.studentEduPreference.Payout, DropDownHelper.getPayouts(0))
                                            @Html.ValidationMessageFor(m => m.studentEduPreference.Payout)
                                        </div>
                                    </li>
                                    <li class="row-fluid">
                                        <div class="span3">
                                            <label id="dfsco">
                                                Desired Field of Study :</label>
                                        </div>
                                        <div class="span3">
                                            @Html.DropDownListFor(m => m.studentEduPreference.DesiredFieldofStudy, DropDownHelper.getAvailableCources(""))
                                            @Html.ValidationMessageFor(m => m.studentEduPreference.DesiredFieldofStudy)
                                        </div>
                                    </li>

                                    <li class="row-fluid">
                                        <div class="span3">
                                        </div>
                                        <div class="span3">
                                            <input type="submit" class="large_button" value="Save & Continue" name="btnSaveEduPref" />
                                        </div>
                                    </li>
                                </ul>
                            </div>
                        </form>
                    }
                    else if (ViewBag.Current == "Photo")
                    { 
                        <form method="post" enctype="multipart/form-data">
                            <div id="pnlProfileImage">
                                <ul class="profile_form">
                                    <li class="row-fluid">
                                        <div class="span4">
                                            <label>
                                                Please upload your picture :</label>
                                        </div>
                                        <div class="span4">
                                            <input type="file" name="fileup" />
                                            <a href="javascript:void(0)" id="hoverimage" class="preview">
                                                <img id="imgProfileImage" style="height:40px; width:40px" src="@ViewBag.Photo" />
                                            </a>
                                        </div>
                                    </li>
                                    <li class="row-fluid">
                                        <div class="span4">
                                        </div>
                                        <div class="span6">
                                            <input type="submit" value="Upload & Continue" class="large_button" name="btnSavePhoto" />
                                            <a class="large_button" href="/Student/EditProfile/WorkHistory">Next Section</a>
                                        </div>
                                    </li>
                                </ul>
                            </div>
                        </form>
                    }
                    else if (ViewBag.Current == "WorkHistory")
                    {
                        <form method="post">
                            <div id="pnlWorkhistory">
                                @Html.HiddenFor(m => m.studentWork.StudentId)
                                @Html.HiddenFor(m => m.studentWork.StudentWorkHistoryId)
                                <div id="pnlWorkHistoryInfo">
                                    <ul class="profile_form">
                                        <li class="row-fluid">
                                            <div class="span3">
                                                <label>
                                                    Company Name :</label>
                                            </div>
                                            <div class="span3">
                                                @Html.TextBoxFor(m => m.studentWork.CompanyName)
                                                @Html.ValidationMessageFor(m => m.studentWork.CompanyName)
                                            </div>
                                        </li>
                                        <li class="row-fluid">
                                            <div class="span3">
                                                <label>
                                                    Position :</label>
                                            </div>
                                            <div class="span3">
                                                @Html.TextBoxFor(m => m.studentWork.Position)
                                                @Html.ValidationMessageFor(m => m.studentWork.Position)
                                            </div>
                                        </li>
                                        @{
                        int day = 0;
                        int month = 0;
                        int year = 0;

                        DateTime? start = Model.studentWork.StartDate;
                        if (start.HasValue)
                        {
                            day = start.Value.Day;
                            month = start.Value.Month;
                            year = start.Value.Year;
                        }
                                        }
                                        <li class="row-fluid">
                                            <div class="span3">
                                                <label>
                                                    Start Date :</label>
                                            </div>
                                            <div class="span2">
                                                @Html.DropDownListFor(m => m.studentWork.start_day, DropDownHelper.getDays(day))
                                                @Html.ValidationMessageFor(m => m.studentWork.start_day)
                                            </div>
                                            <div class="span2">
                                                @Html.DropDownListFor(m => m.studentWork.start_month, DropDownHelper.getMonths(month))
                                                @Html.ValidationMessageFor(m => m.studentWork.start_month)
                                            </div>
                                            <div class="span2">
                                                @Html.DropDownListFor(m => m.studentWork.start_year, DropDownHelper.getYears(year))
                                                @Html.ValidationMessageFor(m => m.studentWork.start_year)
                                            </div>
                                        </li>
                                        @{
                        day = 0;
                        month = 0;
                        year = 0;

                        DateTime? end = Model.studentWork.EndDate;
                        if (end.HasValue)
                        {
                            day = end.Value.Day;
                            month = end.Value.Month;
                            year = end.Value.Year;
                        }
                                        }
                                        <li class="row-fluid">
                                            <div class="span3">
                                                <label>
                                                    End Date :</label>
                                            </div>
                                            <div class="span2">
                                                @Html.DropDownListFor(m => m.studentWork.end_day, DropDownHelper.getDays(day))
                                                @Html.ValidationMessageFor(m => m.studentWork.end_day)
                                            </div>
                                            <div class="span2">
                                                @Html.DropDownListFor(m => m.studentWork.end_month, DropDownHelper.getMonths(month))
                                                @Html.ValidationMessageFor(m => m.studentWork.end_month)
                                            </div>
                                            <div class="span2">
                                                @Html.DropDownListFor(m => m.studentWork.end_year, DropDownHelper.getYears(year))
                                                @Html.ValidationMessageFor(m => m.studentWork.end_year)
                                            </div>
                                        </li>
                                        <li class="row-fluid">
                                            <div class="span3">
                                                <label>
                                                    Resposibilities :</label>
                                            </div>
                                            <div class="span5">
                                                @Html.TextAreaFor(m => m.studentWork.Responsibilities)
                                                @Html.ValidationMessageFor(m => m.studentWork.Responsibilities)
                                            </div>
                                        </li>
                                        <li class="row-fluid">
                                            <div class="span3">
                                            </div>
                                            <div class="span6">
                                                <input id="btnSaveWorkHistory" name="btnSaveWorkHistory" value="Add to List" class="large_button" type="submit" />

                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </div>

                            <div id="pnlWorkHistoryDetail">
                                @if (Model.studentWorkHistoryList.Count != 0)
                                {
                                    <table cellspacing="0" border="1" style="border-collapse: collapse;" id="MainContent_grvWorkHistory" rules="all" class="simple_table box">
                                        <tr>
                                            <th style="width: 5%;" scope="col">Delete</th>
                                            <th style="width: 10%;" scope="col">Company Name</th>
                                            <th style="width: 10%;" scope="col">Position</th>
                                            <th style="width: 10%;" scope="col">Start Date</th>
                                            <th style="width: 10%;" scope="col">End Date</th>
                                            <th style="width: 10%;" scope="col">Responsibilities</th>
                                        </tr>

                                        @foreach (var r in Model.studentWorkHistoryList)
                                        {
                                            <tr>
                                                <td style="width: 5%;">
                                                    <a id="deletework" href="javascript:void(0)" id="" onclick="WorkDelete('@r.StudentWorkHistoryId',this,'@r.CompanyName');">Delete</a>
                                                </td>
                                                <td style="width: 10%;">
                                                    <a href="/Student/EditProfile?work=@r.StudentWorkHistoryId">@r.CompanyName</a>
                                                </td>
                                                <td style="width: 10%;">@r.Position</td>
                                                <td style="width: 10%;">@r.StartDate.ToShortDateString()</td>
                                                <td style="width: 10%;">@r.EndDate.ToShortDateString()</td>
                                                <td style="width: 10%;">@r.Responsibilities</td>
                                            </tr>
                                        }
                                    </table>
                                }
                            </div>
                            <a class="large_button fright" href="/Student/EditProfile/ExtraActivity">Next section</a>
                        </form>
                    }
                    else if (ViewBag.Current == "ExtraActivity")
                    {
                        <form method="post">
                            <div id="pnlCurricularActivies">
                                <ul class="profile_form">
                                    <li class="row-fluid">
                                        <div class="span3">
                                            <label>
                                                Sports :</label>
                                        </div>
                                        <div class="span5">
                                            @Html.TextAreaFor(m => m.studentExtraActivity.SportActivities)
                                        </div>
                                    </li>
                                    <li class="row-fluid">
                                        <div class="span3">
                                            <label>
                                                Leadership :</label>
                                        </div>
                                        <div class="span5">
                                            @Html.TextAreaFor(m => m.studentExtraActivity.LeadershipActivies)
                                        </div>
                                    </li>
                                    <li class="row-fluid">
                                        <div class="span3">
                                            <label>
                                                Other Activities :</label>
                                        </div>
                                        <div class="span5">
                                            @Html.TextAreaFor(m => m.studentExtraActivity.OtherActivities)
                                        </div>
                                    </li>
                                    <li class="row-fluid">
                                        <div class="span3">
                                        </div>
                                        <div class="span5">
                                            <input name="btnSaveActivities" value="Save" type="submit" class="large_button" />
                                            @if (CookieHelper.UserType == ((int)LoginTypes.Student).ToString())
                                            {
                                                <input id="BtnCompleteProfile" value="Complete Profile" type="button" class="large_button" />
                                            }
                                        </div>
                                    </li>
                                </ul>
                            </div>
                        </form>
                    }
                    else
                    {
                        <form method="post">
                            <div id="pnlBasicDetail">
                                @Html.HiddenFor(m => m.student.StudentId)
                                <ul class="profile_form">
                                    @if (CookieHelper.UserType == ((int)LoginTypes.Admin).ToString())
                                    {
                                        <li class="row-fluid">
                                            <div class="span3">
                                                <label>UserName :</label>
                                            </div>
                                            <div class="span6">

                                                @if (Model != null)
                                                {
                                                    if (Model.registerModel != null)
                                                    {
                                                        if (Model.registerModel.UserName != null)
                                                        {
                                                    @Html.TextBoxFor(x => x.registerModel.UserName, new { @readonly = "readonly" })
                                                        }
                                                        else
                                                        {
                                                    @Html.TextBoxFor(x => x.registerModel.UserName, new { placeholder = "UserName" })
                                                        }
                                                    }
                                                    else
                                                    {
                                                    @Html.TextBoxFor(x => x.registerModel.UserName, new { placeholder = "UserName" })
                                                    }
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(x => x.registerModel.UserName, new { placeholder = "UserName" })
                                                }
                                                @Html.ValidationMessageFor(x => x.registerModel.UserName)
                                                 @Html.ValidationMessage("errDuplicateUser")

                                               @* @Html.TextBoxFor(m => m.registerModel.UserName, new { placeholder = "UserName" })
                                                @Html.ValidationMessageFor(m => m.registerModel.UserName)
                                                @Html.ValidationMessage("errDuplicateUser")*@
                                            </div>
                                        </li>
                                        <li class="row-fluid">
                                            <div class="span3">
                                                <label>Password :</label>
                                            </div>
                                            <div class="span6">
                                                @Html.TextBoxFor(m => m.registerModel.Password, new { placeholder = "Password", type = "password" })
                                                @Html.ValidationMessageFor(m => m.registerModel.Password)
                                            </div>
                                        </li>
                                        <li class="row-fluid">
                                            <div class="span3">
                                                <label>Confirm Password :</label>
                                            </div>
                                            <div class="span6">
                                                @Html.TextBoxFor(m => m.registerModel.ConfirmPassword, new { placeholder = "Confirm Password", type = "password" })
                                                @Html.ValidationMessageFor(m => m.registerModel.ConfirmPassword)
                                            </div>
                                        </li>
                                    }
                                    @if (CookieHelper.UserType == ((int)LoginTypes.Student).ToString())
                                    {
                                        <li class="row-fluid">
                                            <div class="span3">
                                                <label>UserName :</label>
                                            </div>
                                            <div class="span6">
                                                <input type="text" value="@CookieHelper.Username" readonly="true" />
                                            </div>
                                        </li>
                                    }
                                    <li class="row-fluid">
                                        <div class="span3">
                                            <label>Name :</label>
                                        </div>
                                        <div class="span3">
                                            @Html.TextBoxFor(m => m.student.FirstName, new { placeholder = "FirstName" })
                                            @Html.ValidationMessageFor(m => m.student.FirstName)
                                        </div>
                                        <div class="span3">
                                            @Html.TextBoxFor(m => m.student.MiddleName, new { placeholder = "MiddleName" })

                                        </div>
                                        <div class="span3">
                                            @Html.TextBoxFor(m => m.student.LastName, new { placeholder = "LastName" })
                                            @Html.ValidationMessageFor(m => m.student.LastName)
                                        </div>
                                    </li>
                                    <li class="row-fluid">
                                        <div class="span3">
                                            <label>Address 1 :</label>
                                        </div>
                                        <div class="span6">
                                            @Html.TextBoxFor(m => m.student.Address1, new { @class = "address" })
                                            @Html.ValidationMessageFor(m => m.student.Address1)
                                        </div>
                                    </li>

                                    <li class="row-fluid">
                                        <div class="span3">
                                            <label>Address 2 :</label>
                                        </div>
                                        <div class="span6">
                                            @Html.TextBoxFor(m => m.student.Address2, new { @class = "address" })
                                        </div>
                                    </li>
                                    <li class="row-fluid">
                                        <div class="span3">
                                            <label>Zip Code :</label>
                                        </div>
                                        <div class="span3">
                                            @Html.TextBoxFor(m => m.student.ZipCode)
                                            @Html.ValidationMessageFor(m => m.student.ZipCode)
                                        </div>
                                    </li>
                                    <li class="row-fluid">
                                        <div class="span3">
                                            <label>
                                                Country :</label>
                                        </div>
                                        <div class="span3">
                                            @{
                                    string tmp = Convert.ToString((int)EnumHelper.GetEnumValueFromDescription<CountryList>(Model.student.Country));
                                    if (Model.student.Country != null && tmp == "0")
                                    {
                                        //To get value of enum if it does not contain description
                                        CountryList cl = (CountryList)Enum.Parse(typeof(CountryList), Model.student.Country);
                                        Model.student.Country = ((int)cl).ToString();
                                    }
                                    else
                                    {
                                        Model.student.Country = tmp;

                                    }
                                            }

                                            @Html.DropDownListFor(m => m.student.Country, DropDownHelper.getCountry(Model.student.Country))
                                            @Html.ValidationMessageFor(m => m.student.Country)
                                        </div>

                                    </li>
                                    <li class="row-fluid">
                                        <div class="span3">
                                            <label>City:</label>
                                        </div>
                                        <div class="span3">
                                            @Html.TextBoxFor(m => m.student.City)
                                            @Html.ValidationMessageFor(m => m.student.City)
                                        </div>
                                    </li>
                                    <li class="row-fluid">
                                        <div class="span3">
                                            <label>
                                                Primary Phone :</label>
                                        </div>

                                        <div class="span2">
                                            @Html.DropDownListFor(m => m.student.PrimaryType, DropDownHelper.getPhoneType(Model.student.PrimaryType))
                                            @Html.ValidationMessageFor(m => m.student.PrimaryType)
                                        </div>
                                        @{
                                    string type = Model.student.PrimaryNumber;
                                    string[] arr = null;
                                    string code = "0";
                                    string area = "";
                                    string phone_no = null;

                                    if (type != null && type.Contains('-'))
                                    {
                                        arr = type.Split('-');

                                        code = arr[0];
                                        area = arr[1];
                                        phone_no = arr[2];
                                    }
                                        }
                                        <div class="span3">
                                            @Html.DropDownListFor(m => m.student.CoutryCodePrimary, DropDownHelper.getCountryCode(code))
                                            @Html.ValidationMessageFor(m => m.student.CoutryCodePrimary)
                                        </div>
                                        @{ 
                                    Model.student.PrimaryAreaCode = area;
                                        }
                                        <div class="span2">
                                            @Html.TextBoxFor(m => m.student.PrimaryAreaCode, new { placeholder = "Area Code", maxlength = "10", value = area })
                                            @Html.ValidationMessageFor(m => m.student.PrimaryAreaCode)
                                        </div>

                                        <div class="span2">
                                            @{
                                    Model.student.PrimaryNumber = phone_no;
                                            }
                                            @Html.TextBoxFor(m => m.student.PrimaryNumber, new { placeholder = "Number", maxlength = "15", value = phone_no })
                                            @Html.ValidationMessageFor(m => m.student.PrimaryNumber)
                                        </div>
                                    </li>
                                    @{
                                    type = Model.student.SecondaryNumber;
                                    arr = null;
                                    code = "0";
                                    area = "";
                                    phone_no = null;
                                    if (type != null && type.Contains('-'))
                                    {
                                        arr = type.Split('-');

                                        code = arr[0];
                                        area = arr[1];
                                        phone_no = arr[2];
                                    }
                                    }
                                    <li class="row-fluid">
                                        <div class="span3">
                                            <label>
                                                Secondry Phone :</label>
                                        </div>
                                        <div class="span2">
                                            @Html.DropDownListFor(m => m.student.SecondaryType, DropDownHelper.getPhoneType(Model.student.SecondaryType))
                                        </div>

                                        <div class="span3">
                                            @Html.DropDownListFor(m => m.student.CountryCodeSecondary, DropDownHelper.getCountryCode(code))
                                        </div>

                                        <div class="span2">
                                            @{ 
                                    Model.student.SecondaryAreaCode = area;
                                            }
                                            @Html.TextBoxFor(m => m.student.SecondaryAreaCode, new { placeholder = "Area Code", maxlength = "10" })
                                            @Html.ValidationMessageFor(m => m.student.SecondaryAreaCode)
                                            @*<input type="text" name="txtAreaCode2" id="txtAreaCode2" placeholder="Area Code" size="10" value="@area" />*@
                                        </div>

                                        <div class="span2">
                                            @{
                                    Model.student.SecondaryNumber = phone_no;
                                            }

                                            @Html.TextBoxFor(m => m.student.SecondaryNumber, new { placeholder = "Number", maxlength = "15" })
                                            @Html.ValidationMessageFor(m => m.student.SecondaryNumber)
                                            @*<input type="text" name="txtSecondaryNumber" id="txtSecondaryNumber" placeholder="Number" size="10" value="@phone_no" />*@
                                        </div>
                                    </li>
                                    <li class="row-fluid">
                                        <div class="span3">
                                            <label>
                                                Birth date :</label>
                                        </div>
                                        @{
                                    int day = 0;
                                    int month = 0;
                                    int year = 0;

                                    DateTime? bdate = Model.student.BirthDate;
                                    if (bdate.HasValue)
                                    {
                                        day = bdate.Value.Day;
                                        month = bdate.Value.Month;
                                        year = bdate.Value.Year;
                                    }
                                        }
                                        <div class="span2">
                                            @Html.DropDownListFor(m => m.student.day, DropDownHelper.getDays(day))
                                            @Html.ValidationMessageFor(m => m.student.day)
                                            @Html.ValidationMessage("errInvalidDate")
                                        </div>
                                        <div class="span2">
                                            @Html.DropDownListFor(m => m.student.month, DropDownHelper.getMonths(month))
                                            @Html.ValidationMessageFor(m => m.student.month)
                                        </div>
                                        <div class="span2">
                                            @Html.DropDownListFor(m => m.student.year, DropDownHelper.getYears(year))
                                            @Html.ValidationMessageFor(m => m.student.year)
                                        </div>

                                    </li>
                                    <li class="row-fluid">
                                        <div class="span3">
                                            <label>
                                                Citizenship Of :</label>
                                        </div>
                                        <div class="span3">
                                            @{
                                                
                                    string tmp1 = Convert.ToString((int)EnumHelper.GetEnumValueFromDescription<CountryList>(Model.student.Citizenship));
                                    if (Model.student.Citizenship != null && tmp1 == "0")
                                    {
                                        //To get value of enum if it does not contain description
                                        CountryList cl = (CountryList)Enum.Parse(typeof(CountryList), Model.student.Citizenship);
                                        Model.student.Citizenship = ((int)cl).ToString();
                                    }
                                    else
                                    {
                                        Model.student.Citizenship = tmp1;

                                    }
                                            }


                                            @Html.DropDownListFor(m => m.student.Citizenship, DropDownHelper.getCountry(Model.student.Citizenship))
                                            @Html.ValidationMessageFor(m => m.student.Citizenship)
                                        </div>
                                    </li>
                                    <li class="row-fluid">
                                        <div class="span3">
                                        </div>
                                        <div class="span4">
                                            <input type="submit" id="btnSave" name="btnSave" value="Save & Continue" class="large_button" />
                                        </div>
                                    </li>
                                </ul>
                            </div>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">


    $(function () {
        var s = '@ViewContext.RouteData.Values["chk"]';
        var s1 = '@ViewContext.RouteData.Values["id"]';
        if (s == "fl" || s1 == "fl") {
            $("#dialog-AlertIncompleteProfile").dialog({
                open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
                resizable: false,
                height: 370,
                width: 500,
                modal: true,
                closeOnEscape: true,
                buttons: {
                    "OK": function () {
                        $(this).dialog("close");
                    }
                },
            });
        }
    });
    $("#BtnCompleteProfile").click(function () {
        $("#dialog-CompleteProfile").dialog({
            open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
            resizable: false,
            height: 180,
            modal: true,
            closeOnEscape: true,
            buttons: {
                "OK": function () {
                    $(this).dialog('close');
                    window.location.href = "/Student/";
                }

            },
        });
    });
</script>

@*This Script is useful yo manage tabs*@
<script type="text/javascript">
    $("#tabNavigation li").each(function () {
        $(this).removeClass('list1_active');
    });
    $("#@ViewBag.Current").addClass('list_active');


    $(function () {

        $("#nav li").each(function () {
            $(this).removeClass('navi_active');
        });
        $("#lnkProfile").addClass('navi_active');
    });
</script>

@*this script is useful to detect changes*@
<script type="text/javascript">
    $(".rdo").change(function () {
        var rdvlaue = $(this).attr('value');
        if (rdvlaue == '1') {
            document.getElementById('pnlGraduateDetail').style.display = 'inline';
            document.getElementById('pnlongoing').style.display = 'none';
        }
        else if (rdvlaue == '3') {
            document.getElementById('pnlongoing').style.display = 'inline';
            document.getElementById('pnlGraduateDetail').style.display = 'none';
        }
        else {
            document.getElementById('pnlongoing').style.display = 'none';
            document.getElementById('pnlGraduateDetail').style.display = 'none';
        }
    });
</script>

@*This script is use to check divisions associated with radio button*@
<script type="text/javascript">
    $("#btnSaveAcademic").click(function () {
        var selectedvalue = document.getElementsByClassName('rdo');

        if (selectedvalue.item(0).checked) {
            var sel = document.getElementById('@Html.IdFor(m => m.studentAcademic.GraduationYear)');
            var sv = sel.options[sel.selectedIndex].value;
            var lbl = document.getElementById("lblyeargradution");
            if (sv == '0') {
                lbl.style.display = "";
                return false;
            }
            else {
                lbl.style.display = "none";
            }

            var sel1 = document.getElementById('@Html.IdFor(m => m.studentAcademic.GraduationLevel)');
            var sv1 = sel1.options[sel1.selectedIndex].value;
            var lbl1 = document.getElementById("lbllevelcompleted");
            if (sv1 == '0') {
                lbl1.style.display = "";
                return false;
            }
            else {
                lbl1.style.display = "none";
            }
        }
        else if (selectedvalue.item(2).checked) {
            var sel = document.getElementById('@Html.IdFor(m => m.studentAcademic.GraduationLevel)');

            var sv = sel.options[sel.selectedIndex].value;

            //var lbl = document.getElementById("lbldegreepusued");
            //if (sv == '0') {
            //    lbl.style.display = "";
            //    return false;
            //}
            //else {
            //    lbl.style.display = "none";
            //}
            var sel1 = document.getElementById('@Html.IdFor(m => m.studentAcademic.ExpectedYearofGraduation)');
            var sv1 = sel1.options[sel1.selectedIndex].value;
            var lbl1 = document.getElementById("lblexpectedgraduation");
            if (sv1 == '0') {
                lbl1.style.display = "";
                return false;
            }
            else {
                lbl1.style.display = "none";
            }
            var sel3 = document.getElementById('@Html.IdFor(m => m.studentAcademic.FieldofStudy)').value;
            var lbl2 = document.getElementById("lblfieldofstudy");
            if (sel3 == '' || sel3 == null) {
                lbl2.style.display = "";
                return false;
            }
            else {
                lbl2.style.display = "none";
            }
        }
    });
</script>

@*Student WorkHistory*@
@*This script is used to validate start date and end date*@
<script type="text/javascript">

    //Start And End Date Validation
    $("#btnSaveWorkHistory").click(function () {
        var dd = document.getElementById("@Html.IdFor(m => m.studentWork.start_day)");
        var dbday = dd.options[dd.selectedIndex].value;
        var ddlmonthlist = document.getElementById("@Html.IdFor(m => m.studentWork.start_month)");
        var dbmonth = ddlmonthlist.options[ddlmonthlist.selectedIndex].value;
        var ddlyearlist = document.getElementById("@Html.IdFor(m => m.studentWork.start_year)");
        var dbyear = ddlyearlist.options[ddlyearlist.selectedIndex].value;


        dbmonth = parseInt(dbmonth, 10); dbday = parseInt(dbday, 10); dbyear = parseInt(dbyear, 10);
        if (dbmonth == 4 || dbmonth == 6 || dbmonth == 9 || dbmonth == 11) {
            if (dbday > 30) {
                alert("The month you have selected cannot have more than 30 days");
                dd.focus();
                return false;
            }
        }
        if (dbmonth == 2) {
            if (((dbyear % 100 == 0) && (dbyear % 400 != 0)) && (dbday > 28)) {
                alert("February for the selected year cannot have more than 28 days");
                dd.focus();
                return false;
            }
            else if ((dbyear % 4 == 0) && (dbday > 29)) {
                alert("February for the selected year cannot have more than 29 days");
                dd.focus();
                return false;
            }
            else if ((dbyear % 4 != 0) && (dbday > 28)) {
                alert("February for the selected year cannot have more than 28 days");
                dd.focus();
                return false;
            }
        }
        Start_date = new Date(dbyear, dbmonth - 1, dbday, 23, 59, 59);
        today_date = new Date();
        yearval = parseInt(today_date.getYear()) + 1900;
        if (Start_date > today_date) {
            alert("Entered Date of Start is either future");
            ddlyearlist.focus();
            return false;
        }

        var dd1 = document.getElementById("@Html.IdFor(m => m.studentWork.end_day)");
        var dbday1 = dd1.options[dd1.selectedIndex].value;
        var ddlmonthlist1 = document.getElementById("@Html.IdFor(m => m.studentWork.end_month)");
        var dbmonth1 = ddlmonthlist1.options[ddlmonthlist1.selectedIndex].value;
        var ddlyearlist1 = document.getElementById("@Html.IdFor(m => m.studentWork.end_year)");
        var dbyear1 = ddlyearlist1.options[ddlyearlist1.selectedIndex].value;

        dbmonth1 = parseInt(dbmonth1, 10); dbday1 = parseInt(dbday1, 10); dbyear1 = parseInt(dbyear1, 10);
        if (dbmonth1 == 4 || dbmonth1 == 6 || dbmonth1 == 9 || dbmonth1 == 11) {
            if (dbday1 > 30) {
                alert("The month you have selected cannot have more than 30 days");
                dd1.focus();
                return false;
            }
        }
        if (dbmonth == 2) {
            if (((dbyear1 % 100 == 0) && (dbyear1 % 400 != 0)) && (dbday1 > 28)) {
                alert("February for the selected year cannot have more than 28 days");
                dd1.focus();
                return false;
            }
            else if ((dbyear1 % 4 == 0) && (dbday1 > 29)) {
                alert("February for the selected year cannot have more than 29 days");
                dd1.focus();
                return false;
            }
            else if ((dbyear1 % 4 != 0) && (dbday1 > 28)) {
                alert("February for the selected year cannot have more than 28 days");
                dd1.focus();
                return false;
            }
        }
        End_date = new Date(dbyear1, dbmonth1 - 1, dbday1, 23, 59, 59);
        if (Start_date > End_date) {
            alert("Entered Start Date Is Greter Then End Date ");
            ddlyearlist1.focus();
            return false;
        }

        return true;
    });
</script>

@*Student Educational Preferences*@
@*This script is used to validate start date and end date*@
<script>
    $("#btnSaveEduPref").click(function () {
        var LookupOptionList = document.getElementById("@Html.IdFor(m => m.studentEduPreference.LookingForCountry)");

        var lookupid = LookupOptionList.options[LookupOptionList.selectedIndex].value;
        if (lookupid == "232") {
            var sv = document.getElementById('@Html.IdFor(m => m.studentEduPreference.OtherStudy)').value;
            var lbl = document.getElementById("lblotherstudy");
            if (sv == '' || sv == null) {
                lbl.style.display = "";
                return false;
            }
            else {
                lbl.style.display = "none";
            }
        }
    });

    $("#@Html.IdFor(m => m.studentEduPreference.LookingForCountry)").change(function () {
        var LookupOptionList = document.getElementById("@Html.IdFor(m => m.studentEduPreference.LookingForCountry)");
        var lookupid = LookupOptionList.options[LookupOptionList.selectedIndex].value;
        if (lookupid == "232") {
            document.getElementById('pnlotherstudy').style.display = 'inline';
        }
        else {
            document.getElementById('pnlotherstudy').style.display = 'none';
            document.getElementById('@Html.IdFor(m => m.studentEduPreference.OtherStudy)').value = '';
        }
    });
</script>



<script type="text/javascript">
    $("#ddlStartINtYear").change(function () {
        var selyear = $(this).val();
        $('#ddlGraduationyear').find('option').remove().end().append('<option value="0">Select Any</option>').val('whatever');


        while (selyear <= 2013) {
            $("#ddlGraduationyear").append(new Option(selyear, selyear));
            selyear++;
        }
    });


    $(function () {
        $("#txtBirthDate").datepicker();
        $("#@Html.IdFor(m => m.testList.testAct.Date)").datepicker();
        $("#@Html.IdFor(m => m.testList.testSat.Date)").datepicker();
        $("#@Html.IdFor(m => m.testList.testAp.Date)").datepicker();
        $("#@Html.IdFor(m => m.testList.testGre.Date)").datepicker();
        $("#@Html.IdFor(m => m.testList.testGmat.Date)").datepicker();
        $("#@Html.IdFor(m => m.testList.testIB.Date)").datepicker();
        $("#@Html.IdFor(m => m.testList.testIelts.Date)").datepicker();
        $("#@Html.IdFor(m => m.testList.testLsat.Date)").datepicker();
        $("#@Html.IdFor(m => m.testList.testMcat.Date)").datepicker();
        $("#@Html.IdFor(m => m.testList.testPsat.Date)").datepicker();
        $("#@Html.IdFor(m => m.testList.testSat2.Date)").datepicker();
        $("#@Html.IdFor(m => m.testList.testToeflI.Date)").datepicker();
        $("#@Html.IdFor(m => m.testList.testToeflP.Date)").datepicker();



        $("#txtStartDate").datepicker({
            numberOfMonths: 1,
            onSelect: function (selected) {
                $("#txtEndDate").datepicker("option", "minDate", selected)
            }
        });
        $("#txtEndDate").datepicker({
            numberOfMonths: 1,
            onSelect: function (selected) {
                $("#txtStartDate").datepicker("option", "maxDate", selected)
            }
        });

        $("#nav li").each(function () {
            $(this).removeClass('navi_active');
        });

        $("#lnkProfile").addClass('navi_active');



    });


    $("#btnSaveAcademics").click(function () {
        var selectedvalue = document.getElementsByName('ctl00$MainContent$rdoDidYouGraduate');
        if (selectedvalue.item(0).checked) {
            var sel = document.getElementById('ddlYearOfGraduation');
            var sv = sel.options[sel.selectedIndex].value;
            var lbl = document.getElementById("lblyeargradution");
            if (sv == '0') {
                lbl.style.display = "";
                return false;
            }
            else {
                lbl.style.display = "none";
            }
            var sel1 = document.getElementById('ddlLevelCompleted');
            var sv1 = sel1.options[sel1.selectedIndex].value;
            var lbl1 = document.getElementById("lbllevelcompleted");
            if (sv1 == '0') {
                lbl1.style.display = "";
                return false;
            }
            else {
                lbl1.style.display = "none";
            }
        }
        else if (selectedvalue.item(2).checked) {
            var sel = document.getElementById('ddldegreepusued');
            var sv = sel.options[sel.selectedIndex].value;
            var lbl = document.getElementById("lbldegreepusued");
            if (sv == '0') {
                lbl.style.display = "";
                return false;
            }
            else {
                lbl.style.display = "none";
            }
            var sel1 = document.getElementById('ddlexpectedgraduation');
            var sv1 = sel1.options[sel1.selectedIndex].value;
            var lbl1 = document.getElementById("lblexpectedgraduation");
            if (sv1 == '0') {
                lbl1.style.display = "";
                return false;
            }
            else {
                lbl1.style.display = "none";
            }
            var sel3 = document.getElementById('txtfieldstudy').value;
            var lbl2 = document.getElementById("lblfieldofstudy");
            if (sel3 == '' || sel3 == null) {
                lbl2.style.display = "";
                return false;
            }
            else {
                lbl2.style.display = "none";
            }
        }
    });

</script>
<script>
    // For International Test

    function OpenACT() {
        $("#divHighSchoolEnrollment").hide();
        var le = $("#ActHideShow").html()

        if (le.length < 100) {

            $("#ActHideShow").html($("#divACT").html());
        }
        $("#divACT").show();
        $("#divSAT").hide();
        $("#divAP").hide();
        $("#divGRE").hide();
        $("#divGMAT").hide();
        $("#divIB").hide();
        $("#divIELTS").hide();
        $("#divLSAT").hide();
        $("#divMCAT").hide();
        $("#divPSAT").hide();
        $("#divSAT2").hide();
        $("#divTOEFLInternetbased").hide();
        $("#divTOEFLPaperbased").hide();
    };
    function OpenSAT() {
        $("#divHighSchoolEnrollment").hide();
        $("#divACT").hide();
        $("#divSAT").show();
        $("#divAP").hide();
        $("#divGRE").hide();
        $("#divGMAT").hide();
        $("#divIB").hide();
        $("#divIELTS").hide();
        $("#divLSAT").hide();
        $("#divMCAT").hide();
        $("#divPSAT").hide();
        $("#divSAT2").hide();
        $("#divTOEFLInternetbased").hide();
        $("#divTOEFLPaperbased").hide();
    };
    function OpenAP() {
        $("#divHighSchoolEnrollment").hide();
        $("#divACT").hide();
        $("#divSAT").hide();
        $("#divAP").show();
        $("#divGRE").hide();
        $("#divGMAT").hide();
        $("#divIB").hide();
        $("#divIELTS").hide();
        $("#divLSAT").hide();
        $("#divMCAT").hide();
        $("#divPSAT").hide();
        $("#divSAT2").hide();
        $("#divTOEFLInternetbased").hide();
        $("#divTOEFLPaperbased").hide();
    };
    function OpenGRE() {
        $("#divHighSchoolEnrollment").hide();
        $("#divACT").hide();
        $("#divSAT").hide();
        $("#divAP").hide();
        $("#divGRE").show();
        $("#divGMAT").hide();
        $("#divIB").hide();
        $("#divIELTS").hide();
        $("#divLSAT").hide();
        $("#divMCAT").hide();
        $("#divPSAT").hide();
        $("#divSAT2").hide();
        $("#divTOEFLInternetbased").hide();
        $("#divTOEFLPaperbased").hide();
    };
    function OpenGMAT() {
        $("#divHighSchoolEnrollment").hide();
        $("#divACT").hide();
        $("#divSAT").hide();
        $("#divAP").hide();
        $("#divGRE").hide();
        $("#divGMAT").show();
        $("#divIB").hide();
        $("#divIELTS").hide();
        $("#divLSAT").hide();
        $("#divMCAT").hide();
        $("#divPSAT").hide();
        $("#divSAT2").hide();
        $("#divTOEFLInternetbased").hide();
        $("#divTOEFLPaperbased").hide();
    };
    function OpenIB() {
        $("#divHighSchoolEnrollment").hide();
        $("#divACT").hide();
        $("#divSAT").hide();
        $("#divAP").hide();
        $("#divGRE").hide();
        $("#divGMAT").hide();
        $("#divIB").show();
        $("#divIELTS").hide();
        $("#divLSAT").hide();
        $("#divMCAT").hide();
        $("#divPSAT").hide();
        $("#divSAT2").hide();
        $("#divTOEFLInternetbased").hide();
        $("#divTOEFLPaperbased").hide();
    };
    function OpenIELTS() {
        $("#divHighSchoolEnrollment").hide();
        $("#divACT").hide();
        $("#divSAT").hide();
        $("#divAP").hide();
        $("#divGRE").hide();
        $("#divGMAT").hide();
        $("#divIB").hide();
        $("#divIELTS").show();
        $("#divLSAT").hide();
        $("#divMCAT").hide();
        $("#divPSAT").hide();
        $("#divSAT2").hide();
        $("#divTOEFLInternetbased").hide();
        $("#divTOEFLPaperbased").hide();
    };
    function OpenLSAT() {
        $("#divHighSchoolEnrollment").hide();
        $("#divACT").hide();
        $("#divSAT").hide();
        $("#divAP").hide();
        $("#divGRE").hide();
        $("#divGMAT").hide();
        $("#divIB").hide();
        $("#divIELTS").hide();
        $("#divLSAT").show();
        $("#divMCAT").hide();
        $("#divPSAT").hide();
        $("#divSAT2").hide();
        $("#divTOEFLInternetbased").hide();
        $("#divTOEFLPaperbased").hide();
    };
    function OpenMCAT() {
        $("#divHighSchoolEnrollment").hide();
        $("#divACT").hide();
        $("#divSAT").hide();
        $("#divAP").hide();
        $("#divGRE").hide();
        $("#divGMAT").hide();
        $("#divIB").hide();
        $("#divIELTS").hide();
        $("#divLSAT").hide();
        $("#divMCAT").show();
        $("#divPSAT").hide();
        $("#divSAT2").hide();
        $("#divTOEFLInternetbased").hide();
        $("#divTOEFLPaperbased").hide();
    };
    function OpenPSAT() {
        $("#divHighSchoolEnrollment").hide();
        $("#divACT").hide();
        $("#divSAT").hide();
        $("#divAP").hide();
        $("#divGRE").hide();
        $("#divGMAT").hide();
        $("#divIB").hide();
        $("#divIELTS").hide();
        $("#divLSAT").hide();
        $("#divMCAT").hide();
        $("#divPSAT").show();
        $("#divSAT2").hide();
        $("#divTOEFLInternetbased").hide();
        $("#divTOEFLPaperbased").hide();
    };
    function OpenSAT2() {
        $("#divHighSchoolEnrollment").hide();
        $("#divACT").hide();
        $("#divSAT").hide();
        $("#divAP").hide();
        $("#divGRE").hide();
        $("#divGMAT").hide();
        $("#divIB").hide();
        $("#divIELTS").hide();
        $("#divLSAT").hide();
        $("#divMCAT").hide();
        $("#divPSAT").hide();
        $("#divSAT2").show();
        $("#divTOEFLInternetbased").hide();
        $("#divTOEFLPaperbased").hide();
    };
    function OpenTOEFLInternetbased() {
        $("#divHighSchoolEnrollment").hide();
        $("#divACT").hide();
        $("#divSAT").hide();
        $("#divAP").hide();
        $("#divGRE").hide();
        $("#divGMAT").hide();
        $("#divIB").hide();
        $("#divIELTS").hide();
        $("#divLSAT").hide();
        $("#divMCAT").hide();
        $("#divPSAT").hide();
        $("#divSAT2").hide();
        $("#divTOEFLInternetbased").show();
        $("#divTOEFLPaperbased").hide();
    };
    function OpenTOEFLPaperbased() {
        $("#divHighSchoolEnrollment").hide();
        $("#divACT").hide();
        $("#divSAT").hide();
        $("#divAP").hide();
        $("#divGRE").hide();
        $("#divGMAT").hide();
        $("#divIB").hide();
        $("#divIELTS").hide();
        $("#divLSAT").hide();
        $("#divMCAT").hide();
        $("#divPSAT").hide();
        $("#divSAT2").hide();
        $("#divTOEFLInternetbased").hide();
        $("#divTOEFLPaperbased").show();
    };

    //For Canceling test Save
    function CancelACT() {
        $("#txtComposite").val("");
        $("#txtEnglish").val("");
        $("#txtMath").val("");
        $("#txtReading").val("");
        $("#txtScience").val("");
        $("#txtWriting").val("");
        $("#txtACTDate").val("");
        $("hndACTid").val("0");
        $("#divACT").hide();
        $("#divACT").dialog('close');

    };
    function CancelSAT() {
        $("#@Html.IdFor(m => m.testList.testSat.Reading)").val("");
        $("#@Html.IdFor(m => m.testList.testSat.Math)").val("");
        $("#@Html.IdFor(m => m.testList.testSat.Writing)").val("");
        $("#@Html.IdFor(m => m.testList.testSat.Composite)").val("");
        $("#@Html.IdFor(m => m.testList.testSat.Date)").val("");
        $("#@Html.IdFor(m => m.testList.testSat.StudentTestId)").val("0");
        $("#divSAT").hide();
        $("#divSAT").dialog('close');
    };
    function CancelAP() {
        $("#@Model.testList.testAp.Date").val("");
        $("#@Model.testList.testAp.Score").val("");
        $("#@Model.testList.testAp.Subject").val("");
        $("@Model.testList.testAp.StudentTestId").val("0");
        $("#divAP").hide();
        $("#divAP").dialog('close');
    };
    function CancelGRE() {
        $("#@Html.IdFor(m => m.testList.testGre.VerbalReasoning)").val("");
        $("#@Html.IdFor(m => m.testList.testGre.QuantitativeReasoning)").val("");
        $("#@Html.IdFor(m => m.testList.testGre.AnalyticalWriting)").val("");
        $("#@Html.IdFor(m => m.testList.testGre.Date)").val("");
        $("@Html.IdFor(m => m.testList.testGre.StudentTestId)").val("0");
        $("#divGRE").hide();
        $("#divGRE").dialog('close');
    };
    function CancelGMAT() {
        $("#@Html.IdFor(m => m.testList.testGmat.Verbal)").val("");
        $("#@Html.IdFor(m => m.testList.testGmat.QuantitativeReasoning)").val("");
        $("#@Html.IdFor(m => m.testList.testGmat.Total)").val("");
        $("#@Html.IdFor(m => m.testList.testGmat.AnalyticalWriting)").val("");
        $("#@Html.IdFor(m => m.testList.testGmat.Date)").val("");
        $("#@Html.IdFor(m => m.testList.testGmat.StudentTestId)").val("0");
        $("#divGMAT").hide();
        $("#divGMAT").dialog('close');
    };
    function CancelIB() {
        $("#@Html.IdFor(m => m.testList.testIB.Subject)").val("");
        $("#@Html.IdFor(m => m.testList.testIB.Score)").val("");
        $("#@Html.IdFor(m => m.testList.testIB.Date)").val("");
        $("#@Html.IdFor(m => m.testList.testIB.StudentTestId)").val("0");
        $("#divIB").hide();
        $("#divIB").dialog('close');
    };
    function CancelIELTS() {
        $("#@Html.IdFor(m => m.testList.testIelts.Listening)").val("");
        $("#@Html.IdFor(m => m.testList.testIelts.Reading)").val("");
        $("#@Html.IdFor(m => m.testList.testIelts.Writing)").val("");
        $("#@Html.IdFor(m => m.testList.testIelts.Speaking)").val("");
        $("#@Html.IdFor(m => m.testList.testIelts.Date)").val("");
        $("#@Html.IdFor(m => m.testList.testIelts.StudentTestId)").val("0");
        $("#divIELTS").hide();
        $("#divIELTS").dialog('close');
    };
    function CancelLSAT() {
        $("#@Html.IdFor(m => m.testList.testLsat.Score)").val("");
        $("#@Html.IdFor(m => m.testList.testLsat.Date)").val("");
        $("#@Html.IdFor(m => m.testList.testLsat.StudentTestId)").val("0");
        $("#divLSAT").hide();
        $("#divLSAT").dialog('close');
    };
    function CancelMCAT() {
        $("#@Html.IdFor(m => m.testList.testMcat.Biology)").val("");
        $("#@Html.IdFor(m => m.testList.testMcat.Physics)").val("");
        $("#@Html.IdFor(m => m.testList.testMcat.Verbal)").val("");
        $("#@Html.IdFor(m => m.testList.testMcat.Writing)").val("");
        $("#@Html.IdFor(m => m.testList.testMcat.Date)").val("");
        $("#@Html.IdFor(m => m.testList.testMcat.StudentTestId)").val("0");
        $("#divMCAT").hide();
        $("#divMCAT").dialog('close');
    };
    function CancelPSAT() {
        $("#@Html.IdFor(m => m.testList.testPsat.Reading)").val("");
        $("#@Html.IdFor(m => m.testList.testPsat.Math)").val("");
        $("#@Html.IdFor(m => m.testList.testPsat.Writing)").val("");
        $("#@Html.IdFor(m => m.testList.testPsat.Date)").val("");
        $("#@Html.IdFor(m => m.testList.testPsat.StudentTestId)").val("0");
        $("#divPSAT").hide();
        $("#divPSAT").dialog('close');
    };
    function CancelSAT2() {
        $("#@Html.IdFor(m => m.testList.testSat2.Subject)").val("");
        $("#@Html.IdFor(m => m.testList.testSat2.Score)").val("");
        $("#@Html.IdFor(m => m.testList.testSat2.Date)").val("");
        $("#@Html.IdFor(m => m.testList.testSat2.StudentTestId)").val("0");
        $("#divSAT2").hide();
        $("#divSAT2").dialog('close');
    };
    function CancelTOEFLInternetbased() {
        $("#@Html.IdFor(m => m.testList.testToeflI.Reading)").val("");
        $("#@Html.IdFor(m => m.testList.testToeflI.Listening)").val("");
        $("#@Html.IdFor(m => m.testList.testToeflI.Speaking)").val("");
        $("#@Html.IdFor(m => m.testList.testToeflI.Writing)").val("");
        $("#@Html.IdFor(m => m.testList.testToeflI.Total)").val("");
        $("#@Html.IdFor(m => m.testList.testToeflI.Date)").val("");
        $("#@Html.IdFor(m => m.testList.testToeflI.StudentTestId)").val("0");
        $("#divTOEFLInternetbased").hide();
        $("#divTOEFLInternetbased").dialog('close');
    };
    function CancelTOEFLPaperbased() {
        $("#@Html.IdFor(m => m.testList.testToeflP.Reading)").val("");
        $("#@Html.IdFor(m => m.testList.testToeflP.Listening)").val("");
        $("#@Html.IdFor(m => m.testList.testToeflP.Speaking)").val("");
        $("#@Html.IdFor(m => m.testList.testToeflP.Writing)").val("");
        $("#@Html.IdFor(m => m.testList.testToeflP.Total)").val("");
        $("#@Html.IdFor(m => m.testList.testToeflP.Date)").val("");
        $("#@Html.IdFor(m => m.testList.testToeflP.StudentTestId)").val("0");
        $("#divTOEFLPaperbased").hide();
        $("#divTOEFLPaperbased").dialog('close');
    };
</script>

@*ACT and SAT*@
<script>
    $("#btnACTSave").click(function () {
        if ($("#frmACT").valid()) {
            var act = {
                TestId: "2",
                Composite: $("#@Html.IdFor(m => m.testList.testAct.Composite)").val(),
                English: $("#@Html.IdFor(m => m.testList.testAct.English)").val(),
                Math: $("#@Html.IdFor(m => m.testList.testAct.Math)").val(),
                Reading: $("#@Html.IdFor(m => m.testList.testAct.Reading)").val(),
                Science: $("#@Html.IdFor(m => m.testList.testAct.Science)").val(),
                Writing: $("#@Html.IdFor(m => m.testList.testAct.Writing)").val(),
                Date: $("#@Html.IdFor(m => m.testList.testAct.Date)").val(),
                StudentTestId: $("#@Html.IdFor(m => m.testList.testAct.StudentTestId)").val()
            };

            $.ajax({
                type: "POST",
                beforeSend: function () { $("#LoadingImage").show(); },
                complete: function () { $("#LoadingImage").hide(); },
                url: "/Method/ACTSave",
                data: JSON.stringify(act),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    $("#dialog-SaveTest").dialog({
                        open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
                        resizable: false,
                        height: 180,
                        modal: true,
                        buttons: {
                            "OK": function () {
                                $(this).dialog('close');
                            }

                        },
                    });
                    // alert("Data Saved succesfully");
                    var data = msg;

                    if (data[2] == "add") {

                        if (document.getElementById("ulACT") != null) {
                            var v = '<li><a id="editact' + data[0] + '" href="javascript:OpenACTEdit(' + data[0] + ')">ACT-' + data[1] + '</a> <a href="javascript:ACTDelete(' + data[0] + ')" id="deleteact' + data[0] + '" class="delete"> Delete</a></li>';
                            $("#ulACT").append(v);
                        }
                        else {
                            var v = '<span id="ulACT"><span><li><a id="editact' + data[0] + '" href="javascript:OpenACTEdit(' + data[0] + ')">ACT-' + data[1] + '</a> <a href="javascript:ACTDelete(' + data[0] + ')" id="deleteact' + data[0] + '" class="delete"> Delete</a></li></span></span>';
                            $("#ulACT").append(v);
                        }
                    }
                    else if (data[2] == "edit") {
                        $("#editact" + data[0]).text("ACT-" + data[1]);
                        window.location.href = "/Student/EditProfile/Test";
                    }
                    else { }

                    $("#@Html.IdFor(m => m.testList.testAct.Composite)").val("");
                    $("#@Html.IdFor(m => m.testList.testAct.English)").val("");
                    $("#@Html.IdFor(m => m.testList.testAct.Math)").val("");
                    $("#@Html.IdFor(m => m.testList.testAct.Reading)").val("");
                    $("#@Html.IdFor(m => m.testList.testAct.Science)").val("");
                    $("#@Html.IdFor(m => m.testList.testAct.Writing)").val("");
                    $("#@Html.IdFor(m => m.testList.testAct.Date)").val("");

                    //$("#hndACTID").val("0");
                    $("#LoadingImage").hide();
                    $("#divACT").hide();
                    $("#divACT").dialog('close');
                }
            });
        }
    });

    function OpenACTEdit(studentTestid) {
        var act = {
            StudentTestid: studentTestid
        };
        $.ajax({
            type: "POST",
            beforeSend: function () { $("#LoadingImage").show(); },
            complete: function () { $("#LoadingImage").hide(); },
            url: "/Method/GetACT",
            data: JSON.stringify(act),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (msg) {
                //var data = JSON.stringify(msg);
                var data = msg;
                if (data != null) {
                    $("#@Html.IdFor(m => m.testList.testAct.Composite)").val(data.Composite);
                    $("#@Html.IdFor(m => m.testList.testAct.English)").val(data.English);
                    $("#@Html.IdFor(m => m.testList.testAct.Math)").val(data.Math);
                    $("#@Html.IdFor(m => m.testList.testAct.Reading)").val(data.Reading);
                    $("#@Html.IdFor(m => m.testList.testAct.Science)").val(data.Science);
                    $("#@Html.IdFor(m => m.testList.testAct.Writing)").val(data.Writing);
                    $("#@Html.IdFor(m => m.testList.testAct.Date)").val(data.Date);
                    $("#@Html.IdFor(m => m.testList.testAct.StudentTestId)").val(data.StudentTestId);


                    $("#divACT").dialog({ modal: true, minWidth: 577, resizable: false, minHeight: 390, closeOnEscape: true, closeText: "" });
                    $("#LoadingImage").hide();
                }
            },
            error: function (xhr, status, error) {
                alert(xhr.statusText);
            }
        });

    }

    function ACTDelete(studentTestid) {
        $("#dialog-confirm").dialog({
            open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
            resizable: false,
            height: 140,
            title: "Delete [ACT]",
            modal: true,
            closeOnEscape: true,
            buttons: {
                "Yes": function () {
                    if (Page_IsValid) {
                        var HighSchool = {
                            StudentTestId: studentTestid
                        };
                        $.ajax({
                            type: "POST",
                            beforeSend: function () { $("#LoadingImage").show(); },
                            complete: function () { $("#LoadingImage").hide(); },
                            url: "/Method/ACTDelete",
                            data: JSON.stringify(HighSchool),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (msg) {
                                $("#deleteact" + studentTestid).parent().remove();

                            }
                        });
                    }
                    $(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    }


    /* SAT */
    $("#btnSATSave").click(function () {
        if ($("#frmSAT").valid()) {
            var sat = {
                Testid: "3",
                Reading: $("#@Html.IdFor(m => m.testList.testSat.Reading)").val(),
                Math: $("#@Html.IdFor(m => m.testList.testSat.Math)").val(),
                Writing: $("#@Html.IdFor(m => m.testList.testSat.Writing)").val(),
                Composite: $("#@Html.IdFor(m => m.testList.testSat.Composite)").val(),
                Date: $("#@Html.IdFor(m => m.testList.testSat.Date)").val(),
                StudentTestid: $("#@Html.IdFor(m => m.testList.testSat.StudentTestId)").val()
            }
            $.ajax({
                type: "POST",
                beforeSend: function () { $("#LoadingImage").show(); },
                complete: function () { $("#LoadingImage").hide(); },
                url: "/Method/SATSave",
                data: JSON.stringify(sat),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    $("#dialog-SaveTest").dialog({
                        open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
                        resizable: false,
                        height: 180,
                        modal: true,
                        closeOnEscape: true,
                        buttons: {
                            "OK": function () {
                                $(this).dialog("close");
                            }

                        },
                    });

                    var data = msg;

                    if (data[2] == "add") {
                        if (document.getElementById("ulSAT") != null) {
                            var v = '<br/><span><li><a id="editsat' + data[0] + '" href="javascript:OpenSATEdit(' + data[0] + ')">SAT-' + data[1] + '</a> <a href="javascript:SATDelete(' + data[0] + ')" id="deletesat' + data[0] + '" class="delete">Delete </a></li></span>';
                            $("#ulSAT").append(v);
                        }
                        else {
                            var v = '<span id="dlSAT"><span><li><a id="editsat' + data[0] + '" href="javascript:OpenSATEdit(' + data[0] + ')">SAT-' + data[1] + '</a> <a href="javascript:SATDelete(' + data[0] + ')" id="deletesat' + data[0] + '" class="delete"> Delete</a></li></span></span>';
                            $("#ulSAT").append(v);
                        }
                    }
                    else if (data[2] == "edit") {
                        $("#editsat" + data[0]).text("SAT-" + data[1]);
                        window.location.href = "/Student/EditProfile/Test";;
                    }
                    else { }
                    $("#LoadingImage").hide();
                    $("#@Html.IdFor(m => m.testList.testSat.Reading)").val("");
                    $("#@Html.IdFor(m => m.testList.testSat.Math)").val("");
                    $("#@Html.IdFor(m => m.testList.testSat.Writing)").val("");
                    $("#@Html.IdFor(m => m.testList.testSat.Composite)").val("");
                    $("#@Html.IdFor(m => m.testList.testSat.Date)").val("");
                    $("#@Html.IdFor(m => m.testList.testSat.StudentTestId)").val("0");
                    $("#divSAT").hide();
                    $("#divSAT").dialog('close');
                }
            });
        }
        return false;
    });

    function OpenSATEdit(studentTestid) {
        var sat = {
            StudentTestid: studentTestid
        };
        $.ajax({
            type: "POST",
            beforeSend: function () { $("#LoadingImage").show(); },
            complete: function () { $("#LoadingImage").hide(); },
            url: "/Method/GetSAT",
            data: JSON.stringify(sat),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (msg) {
                var data = msg;
                if (data != null) {
                    $("#@Html.IdFor(m => m.testList.testSat.Reading)").val(data.Reading);
                    $("#@Html.IdFor(m => m.testList.testSat.Math)").val(data.Math);
                    $("#@Html.IdFor(m => m.testList.testSat.Writing)").val(data.Writing);
                    $("#@Html.IdFor(m => m.testList.testSat.Composite)").val(data.Composite);
                    $("#@Html.IdFor(m => m.testList.testSat.Date)").val(data.Date);
                    $("#@Html.IdFor(m => m.testList.testSat.StudentTestId)").val(data.StudentTestId);
                    $("#divSAT").dialog({ modal: true, minWidth: 577, resizable: false, minHeight: 390, closeOnEscape: true, closeText: "" });
                }
                // alert(data.StudentTestId);
            },
            error: function (xhr, status, error) {
                alert(xhr.statusText);
            }
        });

    }

    function SATDelete(studentTestid) {
        $("#dialog-confirm").dialog({
            open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
            resizable: false,
            height: 140,
            title: "Delete [SAT]",
            modal: true,
            closeOnEscape: true,
            buttons: {
                "Yes": function () {
                    if (Page_IsValid) {
                        var HighSchool = {
                            StudentTestid: studentTestid
                        };
                        $.ajax({
                            type: "POST",
                            beforeSend: function () { $("#LoadingImage").show(); },
                            complete: function () { $("#LoadingImage").hide(); },
                            url: "/Method/SATDelete",
                            data: JSON.stringify(HighSchool),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (msg) {
                                $("#deletesat" + studentTestid).parent().remove();
                            }
                        });
                    }
                    $(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    }
</script>

@*AP*@
<script type="text/javascript">
    $("#btnAPSave").click(function () {
        if ($("#frmAP").valid()) {
            var ap = {
                Testid: "4",
                Subject: $("#@Html.IdFor(m => m.testList.testAp.Subject)").val(),
                Score: $("#@Html.IdFor(m => m.testList.testAp.Score)").val(),
                Date: $("#@Html.IdFor(m => m.testList.testAp.Date)").val(),
                StudentTestid: $("#@Html.IdFor(m => m.testList.testAp.StudentTestId)").val()
            };

            $.ajax({
                type: "POST",
                beforeSend: function () { $("#LoadingImage").show(); },
                complete: function () { $("#LoadingImage").hide(); },
                url: "/Method/APSave",
                data: JSON.stringify(ap),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    $("#dialog-SaveTest").dialog({
                        open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
                        resizable: false,
                        height: 180,
                        closeOnEscape: true,
                        modal: true,
                        buttons: {
                            "OK": function () {
                                $(this).dialog("close");
                            }

                        },
                    });

                    var data = msg;

                    if (data[2] == "add") {
                        if (document.getElementById("ulAP") != null) {
                            var v = '<li><a id="editap' + data[0] + '" href="javascript:OpenAPEdit(' + data[0] + ')">AP-' + data[1] + '</a> <a href="javascript:APDelete(' + data[0] + ')" id="deleteap' + data[0] + '" class="delete"> Delete</a></li>';
                            $("#ulAP").append(v);
                        } else {
                            var v = '<ul id="dlACT"><li><a id="editap' + data[0] + '" href="javascript:OpenAPEdit(' + data[0] + ')">AP-' + data[1] + '</a> <a href="javascript:APDelete(' + data[0] + ')" id="deleteap' + data[0] + '" class="delete"> Delete</a></li></ul>';
                            $("#ulAP").append(v);
                        }
                    }
                    else if (data[2] == "edit") {
                        $("#editap" + data[0]).text("AP-" + data[1]);
                        window.location.href = "/Student/EditProfile/Test";;
                    }
                    else { }
                    $("#LoadingImage").hide();
                    $("#@Html.IdFor(m => m.testList.testAp.Subject)").val("");
                    $("#@Html.IdFor(m => m.testList.testAp.Score)").val("");
                    $("#@Html.IdFor(m => m.testList.testAp.Date)").val("");
                    $("#@Html.IdFor(m => m.testList.testAp.StudentTestId)").val("0");
                    $("#divAP").hide();
                    $("#divAP").dialog('close');

                }
            });
        }
        return false;
    });

    function OpenAPEdit(studentTestid) {
        var ap = {
            StudentTestid: studentTestid
        };
        $.ajax({
            type: "POST",
            beforeSend: function () { $("#LoadingImage").show(); },
            complete: function () { $("#LoadingImage").hide(); },
            url: "/Method/GetTest",
            data: JSON.stringify(ap),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (msg) {
                var data = msg;
                if (data != null) {
                    $("#@Html.IdFor(m => m.testList.testAp.Subject)").val(data.Subject);
                    $("#@Html.IdFor(m => m.testList.testAp.Score)").val(data.Score);
                    $("#@Html.IdFor(m => m.testList.testAp.Date)").val(data.Date);
                    $("#@Html.IdFor(m => m.testList.testAp.StudentTestId)").val(data.StudentTestId);
                    $("#divAP").dialog({ modal: true, minWidth: 577, resizable: false, minHeight: 320, closeOnEscape: true, closeText: "" });
                }
            },
            error: function (xhr, status, error) {
                alert(xhr.statusText);
            }
        });

    }

    function APDelete(studentTestid) {
        $("#dialog-confirm").dialog({
            open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
            resizable: false,
            height: 140,
            title: "Delete [AP]",
            modal: true,
            closeOnEscape: true,
            buttons: {
                "Yes": function () {
                    if (Page_IsValid) {
                        var ap = {
                            StudentTestid: studentTestid
                        };
                        $.ajax({
                            type: "POST",
                            beforeSend: function () { $("#LoadingImage").show(); },
                            complete: function () { $("#LoadingImage").hide(); },
                            url: "/Method/APDelete",
                            data: JSON.stringify(ap),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (msg) {
                                $("#deleteap" + studentTestid).parent().remove();
                            }
                        });
                    }
                    $(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    }
</script>

@*GRE*@
<script type="text/javascript">
    $("#btnGRESave").click(function () {
        if ($("#frmGRE").valid()) {
            var gre = {
                Testid: "5",
                VerbalReasoning: $("#@Html.IdFor(m => m.testList.testGre.VerbalReasoning)").val(),
                QuantitativeReasoning: $("#@Html.IdFor(m => m.testList.testGre.QuantitativeReasoning)").val(),
                AnalyticalWriting: $("#@Html.IdFor(m => m.testList.testGre.AnalyticalWriting)").val(),
                Date: $("#@Html.IdFor(m => m.testList.testGre.Date)").val(),
                StudentTestid: $("#@Html.IdFor(m => m.testList.testGre.StudentTestId)").val()
            };
            $.ajax({
                type: "POST",
                beforeSend: function () { $("#LoadingImage").show(); },
                complete: function () { $("#LoadingImage").hide(); },
                url: "/Method/GRESave",
                data: JSON.stringify(gre),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    $("#dialog-SaveTest").dialog({
                        open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
                        resizable: false,
                        height: 180,
                        closeOnEscape: true,
                        modal: true,
                        buttons: {
                            "OK": function () {
                                $(this).dialog("close");
                            }

                        },
                    });

                    var data = msg;

                    if (data[2] == "add") {
                        if (document.getElementById("ulGRE") != null) {
                            var v = '<li><a id="editgre' + data[0] + '" href="javascript:OpenGREEdit(' + data[0] + ')">GRE-' + data[1] + '</a> <a href="javascript:GREDelete(' + data[0] + ')" id="deletegre' + data[0] + '" class="delete"> Delete</a></li>';
                            $("#ulGRE").append(v);
                        }
                        else {
                            var v = '<ul id="ulGRE"><li><a id="editgre' + data[0] + '" href="javascript:OpenGREEdit(' + data[0] + ')">GRE-' + data[1] + '</a> <a href="javascript:GREDelete(' + data[0] + ')" id="deletegre' + data[0] + '" class="delete"> Delete</a></li></ul>';
                            $("#ulGRE").append(v);
                        }

                    }
                    else if (data[2] == "edit") {
                        $("#editgre" + data[0]).text("GRE-" + data[1]);
                        window.location.href = "/Student/EditProfile/Test";
                    }
                    else { }

                    $("#LoadingImage").hide();
                    $("#@Html.IdFor(m => m.testList.testGre.VerbalReasoning)").val("");
                    $("#@Html.IdFor(m => m.testList.testGre.QuantitativeReasoning)").val("");
                    $("#@Html.IdFor(m => m.testList.testGre.AnalyticalWriting)").val("");
                    $("#@Html.IdFor(m => m.testList.testGre.Date)").val("");
                    $("#@Html.IdFor(m => m.testList.testGre.StudentTestId)").val("0");
                    $("#divGRE").hide();
                    $("#divGRE").dialog('close');

                }
            });
        }
        return false;
    });

    function OpenGREEdit(studentTestid) {
        var gre = {
            StudentTestid: studentTestid
        };
        $.ajax({
            type: "POST",
            beforeSend: function () { $("#LoadingImage").show(); },
            complete: function () { $("#LoadingImage").hide(); },
            url: "/Method/GetAP",
            data: JSON.stringify(gre),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (msg) {
                var data = msg;
                if (data != null) {

                    $("#@Html.IdFor(m => m.testList.testGre.VerbalReasoning)").val(data.VerbalReasoning);
                    $("#@Html.IdFor(m => m.testList.testGre.QuantitativeReasoning)").val(data.QuantitativeReasoning);
                    $("#@Html.IdFor(m => m.testList.testGre.AnalyticalWriting)").val(data.AnalyticalWriting);
                    $("#@Html.IdFor(m => m.testList.testGre.Date)").val(data.Date);
                    $("#@Html.IdFor(m => m.testList.testGre.StudentTestId)").val(data.StudentTestId);
                    $("#divGRE").dialog({ modal: true, minWidth: 577, resizable: false, minHeight: 390, closeOnEscape: true, closeText: "" });
                }
            },
            error: function (xhr, status, error) {
                alert(xhr.statusText);
            }
        });

    }

    function GREDelete(studentTestid) {
        $("#dialog-confirm").dialog({
            open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
            resizable: false,
            height: 140,
            title: "Delete [GRE]",
            modal: true,
            closeOnEscape: true,
            buttons: {
                "Yes": function () {
                    if (Page_IsValid) {
                        var gre = {
                            StudentTestid: studentTestid
                        };
                        $.ajax({
                            type: "POST",
                            beforeSend: function () { $("#LoadingImage").show(); },
                            complete: function () { $("#LoadingImage").hide(); },
                            url: "/Method/APDelete",
                            data: JSON.stringify(gre),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (msg) {
                                $("#deletegre" + studentTestid).parent().remove();
                            }
                        });
                    }
                    $(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    }
</script>


@*GMAT*@
<script type="text/javascript">
    $("#btnGMATSave").click(function () {
        if ($("#frmGMAT").valid()) {
            var gmat = {
                Testid: "6",
                Verbal: $("#@Html.IdFor(m => m.testList.testGmat.Verbal)").val(),
                QuantitativeReasoning: $("#@Html.IdFor(m => m.testList.testGmat.QuantitativeReasoning)").val(),
                Total: $("#@Html.IdFor(m => m.testList.testGmat.Total)").val(),
                AnalyticalWriting: $("#@Html.IdFor(m => m.testList.testGmat.AnalyticalWriting)").val(),
                Date: $("#@Html.IdFor(m => m.testList.testGmat.Date)").val(),
                StudentTestid: $("#@Html.IdFor(m => m.testList.testGmat.StudentTestId)").val()
            };
            $.ajax({
                type: "POST",
                beforeSend: function () { $("#LoadingImage").show(); },
                complete: function () { $("#LoadingImage").hide(); },
                url: "/Method/GMATSave",
                data: JSON.stringify(gmat),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    $("#dialog-SaveTest").dialog({
                        open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
                        resizable: false,
                        height: 180,
                        modal: true,
                        closeOnEscape: true,
                        buttons: {
                            "OK": function () {
                                $(this).dialog("close");
                            }

                        },
                    });

                    var data = msg;

                    if (data[2] == "add") {
                        if (document.getElementById("ulGMAT") != null) {
                            var v = '<li><a id="editgmat' + data[0] + '" href="javascript:OpenGMATEdit(' + data[0] + ')">GMAT-' + data[1] + '</a> <a href="javascript:GMATDelete(' + data[0] + ')" id="deletegmat' + data[0] + '" class="delete"> Delete</a></li>';
                            $("#ulGMAT").append(v);
                        }
                        else {
                            var v = '<span id="ulGMAT"><span><li><a id="editgmat' + data[0] + '" href="javascript:OpenGMATEdit(' + data[0] + ')">GMAT-' + data[1] + '</a> <a href="javascript:GMATDelete(' + data[0] + ')" id="deletegmat' + data[0] + '" class="delete"> Delete</a></li></span></span>';
                            $("#ulGMAT").append(v);
                        }
                    }
                    else if (data[2] == "edit") {
                        $("#editgmat" + data[0]).text("GMAT-" + data[1]);
                        window.location.href = "/Student/EditProfile/Test";
                    }
                    else { }
                    $("#LoadingImage").hide();
                    $("#@Html.IdFor(m => m.testList.testGmat.Verbal)").val("");
                    $("#@Html.IdFor(m => m.testList.testGmat.QuantitativeReasoning)").val("");
                    $("#@Html.IdFor(m => m.testList.testGmat.Total)").val("");
                    $("#@Html.IdFor(m => m.testList.testGmat.AnalyticalWriting)").val("");
                    $("#@Html.IdFor(m => m.testList.testGmat.Date)").val("");
                    $("#@Html.IdFor(m => m.testList.testGmat.StudentTestId)").val("0");
                    $("#divGMAT").hide();
                    $("#divGMAT").dialog('close');

                }
            });
        }
        return false;
    });

    function OpenGMATEdit(studentTestid) {
        var gmat = {
            StudentTestid: studentTestid
        };
        $.ajax({
            type: "POST",
            beforeSend: function () { $("#LoadingImage").show(); },
            complete: function () { $("#LoadingImage").hide(); },
            url: "/Method/GetAP",
            data: JSON.stringify(gmat),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (msg) {
                var data = msg;
                if (data != null) {
                    $("#@Html.IdFor(m => m.testList.testGmat.Verbal)").val(data.Verbal);
                    $("#@Html.IdFor(m => m.testList.testGmat.QuantitativeReasoning)").val(data.QuantitativeReasoning);
                    $("#@Html.IdFor(m => m.testList.testGmat.Total)").val(data.Total);
                    $("#@Html.IdFor(m => m.testList.testGmat.AnalyticalWriting)").val(data.AnalyticalWriting);
                    $("#@Html.IdFor(m => m.testList.testGmat.Date)").val(data.Date);
                    $("#@Html.IdFor(m => m.testList.testGmat.StudentTestId)").val(data.StudentTestId);
                    $("#divGMAT").dialog({ modal: true, minWidth: 577, resizable: false, minHeight: 390, closeOnEscape: true, closeText: "" });
                }
            },
            error: function (xhr, status, error) {
                alert(xhr.statusText);
            }
        });

    }

    function GMATDelete(studentTestid) {
        $("#dialog-confirm").dialog({
            open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
            resizable: false,
            height: 140,
            title: "Delete [GMAT]",
            modal: true, closeOnEscape: true,
            buttons: {
                "Yes": function () {
                    if (Page_IsValid) {
                        var gmat = {
                            StudentTestid: studentTestid
                        };
                        $.ajax({
                            type: "POST",
                            beforeSend: function () { $("#LoadingImage").show(); },
                            complete: function () { $("#LoadingImage").hide(); },
                            url: "/Method/APDelete",
                            data: JSON.stringify(gmat),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (msg) {
                                $("#deletegmat" + studentTestid).parent().remove();

                            }
                        });
                    }
                    $(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    }

</script>

@*IB*@
<script type="text/javascript">
    $("#btnIBSave").click(function () {
        if ($("#frmIB").valid()) {
            var ib = {
                Testid: "7",
                Subject: $("#@Html.IdFor(m => m.testList.testIB.Subject)").val(),
                Score: $("#@Html.IdFor(m => m.testList.testIB.Score)").val(),
                Date: $("#@Html.IdFor(m => m.testList.testIB.Date)").val(),
                StudentTestid: $("#@Html.IdFor(m => m.testList.testIB.StudentTestId)").val()
            };
            $.ajax({
                type: "POST",
                beforeSend: function () { $("#LoadingImage").show(); },
                complete: function () { $("#LoadingImage").hide(); },
                url: "/Method/IBSave",
                data: JSON.stringify(ib),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    $("#dialog-SaveTest").dialog({
                        open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
                        resizable: false,
                        height: 180,
                        modal: true,
                        closeOnEscape: true,
                        buttons: {
                            "OK": function () {
                                $(this).dialog("close");
                            }

                        },
                    });

                    var data = msg;

                    if (data[2] == "add") {
                        if (document.getElementById("ulIB") != null) {
                            var v = '<br/><span><li><a id="editib' + data[0] + '" href="javascript:OpenIBEdit(' + data[0] + ')">IB-' + data[1] + '</a> <a href="javascript:IBDelete(' + data[0] + ')" id="deleteib' + data[0] + '" class="delete"> Delete</a></li></span>';
                            $("#ulIB").append(v);
                        }
                        else {
                            var v = '<span id="ulIB"><span><li><a id="editib' + data[0] + '" href="javascript:OpenIBEdit(' + data[0] + ')">IB-' + data[1] + '</a> <a href="javascript:IBDelete(' + data[0] + ')" id="deleteib' + data[0] + '" class="delete"> Delete</a></li></span></span>';
                            $("#ulIB").append(v);
                        }
                    }
                    else if (data[2] == "edit") {
                        $("#editib" + data[0]).text("IB-" + data[1]);
                        window.location.href = "/Student/EditProfile/Test";
                    }
                    else { }
                    $("#LoadingImage").hide();
                    $("#@Html.IdFor(m => m.testList.testIB.Subject)").val("");
                    $("#@Html.IdFor(m => m.testList.testIB.Score)").val("");
                    $("#@Html.IdFor(m => m.testList.testIB.Date)").val("");
                    $("#@Html.IdFor(m => m.testList.testIB.StudentTestId)").val("0");
                    $("#divIB").hide();
                    $("#divIB").dialog('close');

                }
            });
        }
        return false;
    });

    function OpenIBEdit(studentTestid) {
        var ib = {
            StudentTestid: studentTestid
        };
        $.ajax({
            type: "POST",
            beforeSend: function () { $("#LoadingImage").show(); },
            complete: function () { $("#LoadingImage").hide(); },
            url: "/Method/GetAP",
            data: JSON.stringify(ib),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (msg) {
                var data = msg;
                if (data != null) {
                    $("#@Html.IdFor(m => m.testList.testIB.Subject)").val(data.Subject);
                    $("#@Html.IdFor(m => m.testList.testIB.Score)").val(data.Score);
                    $("#@Html.IdFor(m => m.testList.testIB.Date)").val(data.Date);
                    $("#@Html.IdFor(m => m.testList.testIB.StudentTestId)").val(data.StudentTestId);
                    $("#divIB").dialog({ modal: true, minWidth: 577, resizable: false, minHeight: 390, closeOnEscape: true, closeText: "" });
                }
            },
            error: function (xhr, status, error) {
                alert(xhr.statusText);
            }
        });

    }

    function IBDelete(studentTestid) {
        $("#dialog-confirm").dialog({
            open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
            resizable: false,
            height: 140, closeOnEscape: true,
            title: "Delete [IB]",
            modal: true,
            buttons: {
                "Yes": function () {
                    if (Page_IsValid) {
                        var ib = {
                            StudentTestid: studentTestid
                        };
                        $.ajax({
                            type: "POST",
                            beforeSend: function () { $("#LoadingImage").show(); },
                            complete: function () { $("#LoadingImage").hide(); },
                            url: "/Method/APDelete",
                            data: JSON.stringify(ib),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (msg) {
                                $("#deleteib" + studentTestid).parent().remove();

                                if (msg) {
                                    //location.reload();
                                }
                            }
                        });
                    }
                    $(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    }
</script>


@*IELTS*@
<script type="text/javascript">
    $("#btnIELTSSave").click(function () {
        if ($("#frmIELTS").valid()) {
            var ielts = {
                Testid: "8",
                Listening: $("#@Html.IdFor(m => m.testList.testIelts.Listening)").val(),
                Reading: $("#@Html.IdFor(m => m.testList.testIelts.Reading)").val(),
                Writing: $("#@Html.IdFor(m => m.testList.testIelts.Writing)").val(),
                Speaking: $("#@Html.IdFor(m => m.testList.testIelts.Speaking)").val(),
                Date: $("#@Html.IdFor(m => m.testList.testIelts.Date)").val(),
                StudentTestid: $("#@Html.IdFor(m => m.testList.testIelts.StudentTestId)").val()
            };
            $.ajax({
                type: "POST",
                beforeSend: function () { $("#LoadingImage").show(); },
                complete: function () { $("#LoadingImage").hide(); },
                url: "/Method/IELTSSave",
                data: JSON.stringify(ielts),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    $("#dialog-SaveTest").dialog({
                        open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
                        resizable: false,
                        height: 180,
                        modal: true, closeOnEscape: true,
                        buttons: {
                            "OK": function () {
                                $(this).dialog("close");
                            }

                        },
                    });

                    var data = msg;

                    if (data[2] == "add") {
                        if (document.getElementById("ulIELTS") != null) {
                            var v = '<br/><span><li><a id="editielts' + data[0] + '" href="javascript:OpenIELTSEdit(' + data[0] + ')">IELTS-' + data[1] + '</a> <a href="javascript:IELTSDelete(' + data[0] + ')" id="deleteielts' + data[0] + '" class="delete"> Delete</a></li></span>';
                            $("#ulIELTS").append(v);
                        }
                        else {
                            var v = '<span id="ulIELTS"><span><li><a id="editielts' + data[0] + '" href="javascript:OpenIELTSEdit(' + data[0] + ')">IELTS-' + data[1] + '</a> <a href="javascript:IELTSDelete(' + data[0] + ')" id="deleteielts' + data[0] + '" class="delete"> Delete</a></li></span></span>';
                            $("#ulIELTS").append(v);
                        }
                    }
                    else if (data[2] == "edit") {
                        $("#editielts" + data[0]).text("IELTS-" + data[1]);
                        window.location.href = "/Student/EditProfile/Test";

                    }
                    else { }
                    $("#LoadingImage").hide();
                    $("#@Html.IdFor(m => m.testList.testIelts.Listening)").val("");
                    $("#@Html.IdFor(m => m.testList.testIelts.Reading)").val("");
                    $("#@Html.IdFor(m => m.testList.testIelts.Writing)").val("");
                    $("#@Html.IdFor(m => m.testList.testIelts.Speaking)").val("");
                    $("#@Html.IdFor(m => m.testList.testIelts.Date)").val("");
                    $("#@Html.IdFor(m => m.testList.testIelts.StudentTestId)").val("0");
                    $("#divIELTS").hide();
                    $("#divIELTS").dialog('close');

                }
            });
        }
        return false;
    });

    function OpenIELTSEdit(studentTestid) {
        var ielts = {
            StudentTestid: studentTestid
        };
        $.ajax({
            type: "POST",
            beforeSend: function () { $("#LoadingImage").show(); },
            complete: function () { $("#LoadingImage").hide(); },
            url: "/Method/GetAP",
            data: JSON.stringify(ielts),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (msg) {
                var data = msg;
                if (data != null) {

                    $("#@Html.IdFor(m => m.testList.testIelts.Listening)").val(data.Listening);
                    $("#@Html.IdFor(m => m.testList.testIelts.Reading)").val(data.Reading);
                    $("#@Html.IdFor(m => m.testList.testIelts.Writing)").val(data.Writing);
                    $("#@Html.IdFor(m => m.testList.testIelts.Speaking)").val(data.Speaking);
                    $("#@Html.IdFor(m => m.testList.testIelts.Date)").val(data.Date);
                    $("#@Html.IdFor(m => m.testList.testIelts.StudentTestId)").val(data.StudentTestId);
                    $("#divIELTS").dialog({ modal: true, minWidth: 577, resizable: false, minHeight: 390, closeOnEscape: true, closeText: "" });
                }
            },
            error: function (xhr, status, error) {
                alert(xhr.statusText);
            }
        });

    }

    function IELTSDelete(studentTestid) {
        $("#dialog-confirm").dialog({
            open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
            resizable: false,
            height: 140,
            title: "Delete [IELTS]",
            modal: true,
            closeOnEscape: true,
            buttons: {
                "Yes": function () {
                    if (Page_IsValid) {
                        var ielts = {
                            StudentTestid: studentTestid
                        };
                        $.ajax({
                            type: "POST",
                            beforeSend: function () { $("#LoadingImage").show(); },
                            complete: function () { $("#LoadingImage").hide(); },
                            url: "/Method/APDelete",
                            data: JSON.stringify(ielts),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (msg) {
                                $("#deleteielts" + studentTestid).parent().remove();

                                if (msg) {
                                    //location.reload();
                                }
                            }
                        });
                    }
                    $(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    }

</script>

@*LSAT*@
<script type="text/javascript">
    $("#btnLSATSave").click(function () {
        if ($("#frmLSAT").valid()) {
            var lsat = {
                Testid: "9",
                Score: $("#@Html.IdFor(m => m.testList.testLsat.Score)").val(),
                Date: $("#@Html.IdFor(m => m.testList.testLsat.Date)").val(),
                StudentTestid: $("#@Html.IdFor(m => m.testList.testLsat.StudentTestId)").val()
            };
            $.ajax({
                type: "POST",
                beforeSend: function () { $("#LoadingImage").show(); },
                complete: function () { $("#LoadingImage").hide(); },
                url: "/Method/LSATSave",
                data: JSON.stringify(lsat),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    $("#dialog-SaveTest").dialog({
                        open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
                        resizable: false,
                        height: 180,
                        modal: true, closeOnEscape: true,
                        buttons: {
                            "OK": function () {
                                $(this).dialog("close");
                            }

                        },
                    });
                    var data = msg;

                    if (data[2] == "add") {
                        if (document.getElementById("ulLSAT") != null) {
                            var v = '<br/><span><li><a id="editlsat' + data[0] + '" href="javascript:OpenLSATEdit(' + data[0] + ')">LSAT-' + data[1] + '</a> <a href="javascript:LSATDelete(' + data[0] + ')" id="deletelsat' + data[0] + '" class="delete"> Delete</a></li></span>';
                            $("#ulLSAT").append(v);
                        }
                        else {
                            var v = '<span id="ulLSAT"><span><li><a id="editlsat' + data[0] + '" href="javascript:OpenLSATEdit(' + data[0] + ')">LSAT-' + data[1] + '</a> <a href="javascript:LSATDelete(' + data[0] + ')" id="deletelsat' + data[0] + '" class="delete"> Delete</a></li></span></span>';
                            $("#ulLSAT").append(v);
                        }
                    }
                    else if (data[2] == "edit") {
                        $("#editlsat" + data[0]).text("LSAT-" + data[1]);
                        window.location.href = "/Student/EditProfile/Test";

                    }
                    else { }
                    $("#LoadingImage").hide();
                    $("#@Html.IdFor(m => m.testList.testLsat.Score)").val("");
                    $("#@Html.IdFor(m => m.testList.testLsat.Date)").val("");
                    $("#@Html.IdFor(m => m.testList.testLsat.StudentTestId)").val("0");
                    $("#divLSAT").hide();
                    $("#divLSAT").dialog('close');

                }
            });
        }
        return false;
    });

    function OpenLSATEdit(studentTestid) {
        var lsat = {
            StudentTestid: studentTestid
        };
        $.ajax({
            type: "POST",
            beforeSend: function () { $("#LoadingImage").show(); },
            complete: function () { $("#LoadingImage").hide(); },
            url: "/Method/GetAP",
            data: JSON.stringify(lsat),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (msg) {
                var data = msg;
                if (data != null) {
                    $("#@Html.IdFor(m => m.testList.testLsat.Score)").val(data.Score);
                    $("#@Html.IdFor(m => m.testList.testLsat.Date)").val(data.Date);
                    $("#@Html.IdFor(m => m.testList.testLsat.StudentTestId)").val(data.StudentTestId);
                    $("#divLSAT").dialog({ modal: true, minWidth: 577, resizable: false, minHeight: 390, closeOnEscape: true, closeText: "" });
                }
            },
            error: function (xhr, status, error) {
                alert(xhr.statusText);
            }
        });

    }

    function LSATDelete(studentTestid) {
        $("#dialog-confirm").dialog({
            open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
            resizable: false,
            height: 140,
            title: "Delete [LSAT]",
            modal: true, closeOnEscape: true,
            buttons: {
                "Yes": function () {
                    if (Page_IsValid) {
                        var lsat = {
                            StudentTestid: studentTestid
                        };
                        $.ajax({
                            type: "POST",
                            beforeSend: function () { $("#LoadingImage").show(); },
                            complete: function () { $("#LoadingImage").hide(); },
                            url: "/Method/APDelete",
                            data: JSON.stringify(lsat),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (msg) {
                                $("#deletelsat" + studentTestid).parent().remove();

                                if (msg) {
                                    //location.reload();
                                }
                            }
                        });
                    }
                    $(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    }
</script>

@*MCAT*@
<script type="text/javascript">
    $("#btnMCATSave").click(function () {
        if ($("#frmMCAT").valid()) {
            var mcat = {
                Testid: "10",
                Biology: $("#@Html.IdFor(m => m.testList.testMcat.Biology)").val(),
                Physics: $("#@Html.IdFor(m => m.testList.testMcat.Physics)").val(),
                Verbal: $("#@Html.IdFor(m => m.testList.testMcat.Verbal)").val(),
                Writing: $("#@Html.IdFor(m => m.testList.testMcat.Writing)").val(),
                Date: $("#@Html.IdFor(m => m.testList.testMcat.Date)").val(),
                StudentTestid: $("#@Html.IdFor(m => m.testList.testMcat.StudentTestId)").val()
            };
            $.ajax({
                type: "POST",
                beforeSend: function () { $("#LoadingImage").show(); },
                complete: function () { $("#LoadingImage").hide(); },
                url: "/Method/MCATSave",
                data: JSON.stringify(mcat),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    $("#dialog-SaveTest").dialog({
                        open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
                        resizable: false,
                        height: 180,
                        modal: true, closeOnEscape: true,
                        buttons: {
                            "OK": function () {
                                $(this).dialog("close");
                            }

                        },
                    });
                    var data = msg;

                    if (data[2] == "add") {
                        if (document.getElementById("ulMCAT") != null) {
                            var v = '<br/><span><li><a id="editmcat' + data[0] + '" href="javascript:OpenLMCATEdit(' + data[0] + ')">MCAT-' + data[1] + '</a> <a href="javascriptMCATDelete(' + data[0] + ')" id="deletemcat' + data[0] + '" class="delete"> Delete</a></li></span>';
                            $("#ulMCAT").append(v);
                        }
                        else {
                            var v = '<span id="ulMCAT"><span><li><a id="editmcat' + data[0] + '" href="javascript:OpenMCATEdit(' + data[0] + ')">MCAT-' + data[1] + '</a> <a href="javascript:MCATDelete(' + data[0] + ')" id="deletemcat' + data[0] + '" class="delete"> Delete</a></li></span></span>';
                            $("#ulMCAT").append(v);
                        }
                    }
                    else if (data[2] == "edit") {
                        $("#editmcat" + data[0]).text("MCAT-" + data[1]);
                        window.location.href = "/Student/EditProfile/Test";

                    }
                    else { }
                    $("#LoadingImage").hide();
                    $("#@Html.IdFor(m => m.testList.testMcat.Biology)").val("");
                    $("#@Html.IdFor(m => m.testList.testMcat.Physics)").val("");
                    $("#@Html.IdFor(m => m.testList.testMcat.Verbal)").val("");
                    $("#@Html.IdFor(m => m.testList.testMcat.Writing)").val("");
                    $("#@Html.IdFor(m => m.testList.testMcat.Date)").val("");
                    $("#@Html.IdFor(m => m.testList.testMcat.StudentTestId)").val("0");
                    $("#divMCAT").hide();
                    $("#divMCAT").dialog('close');

                }
            });
        }
        return false;
    });

    function OpenMCATEdit(studentTestid) {
        var mcat = {
            StudentTestid: studentTestid
        };
        $.ajax({
            type: "POST",
            beforeSend: function () { $("#LoadingImage").show(); },
            complete: function () { $("#LoadingImage").hide(); },
            url: "/Method/GetAP",
            data: JSON.stringify(mcat),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (msg) {
                var data = msg;
                if (data != null) {
                    $("#@Html.IdFor(m => m.testList.testMcat.Biology)").val(data.Biology);
                    $("#@Html.IdFor(m => m.testList.testMcat.Physics)").val(data.Physics);
                    $("#@Html.IdFor(m => m.testList.testMcat.Verbal)").val(data.Verbal);
                    $("#@Html.IdFor(m => m.testList.testMcat.Writing)").val(data.Writing);
                    $("#@Html.IdFor(m => m.testList.testMcat.Date)").val(data.Date);
                    $("#@Html.IdFor(m => m.testList.testMcat.StudentTestId)").val(data.StudentTestId);
                    $("#divMCAT").dialog({ modal: true, minWidth: 577, resizable: false, minHeight: 390, closeOnEscape: true, closeText: "" });
                }
            },
            error: function (xhr, status, error) {
                alert(xhr.statusText);
            }
        });

    }

    function MCATDelete(studentTestid) {
        $("#dialog-confirm").dialog({
            open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
            resizable: false,
            height: 140, closeOnEscape: true,
            title: "Delete [MCAT]",
            modal: true,
            buttons: {
                "Yes": function () {
                    if (Page_IsValid) {
                        var mcat = {
                            StudentTestid: studentTestid
                        };
                        $.ajax({
                            type: "POST",
                            beforeSend: function () { $("#LoadingImage").show(); },
                            complete: function () { $("#LoadingImage").hide(); },
                            url: "/Method/APDelete",
                            data: JSON.stringify(mcat),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (msg) {
                                $("#deletemcat" + studentTestid).parent().remove();

                                if (msg) {
                                    //location.reload();
                                }
                            }
                        });
                    }
                    $(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    }
</script>

@*PSAT*@
<script type="text/javascript">
    $("#btnPSATSave").click(function () {
        if ($("#frmPSAT").valid()) {
            var psat = {
                Testid: "11",
                Reading: $("#@Html.IdFor(m => m.testList.testPsat.Reading)").val(),
                Math: $("#@Html.IdFor(m => m.testList.testPsat.Math)").val(),
                Writing: $("#@Html.IdFor(m => m.testList.testPsat.Writing)").val(),
                Date: $("#@Html.IdFor(m => m.testList.testPsat.Date)").val(),
                StudentTestid: $("#@Html.IdFor(m => m.testList.testPsat.StudentTestId)").val()
            };
            $.ajax({
                type: "POST",
                beforeSend: function () { $("#LoadingImage").show(); },
                complete: function () { $("#LoadingImage").hide(); },
                url: "/Method/PSATSave",
                data: JSON.stringify(psat),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    $("#dialog-SaveTest").dialog({
                        open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
                        resizable: false,
                        height: 180, closeOnEscape: true,
                        modal: true,
                        buttons: {
                            "OK": function () {
                                $(this).dialog("close");
                            }

                        },
                    });
                    var data = msg;

                    if (data[2] == "add") {
                        if (document.getElementById("ulPSAT") != null) {
                            var v = '<br/><span><li><a id="editpsat' + data[0] + '" href="javascript:OpenPSATEdit(' + data[0] + ')">PSAT-' + data[1] + '</a> <a href="javascriptPSATDelete(' + data[0] + ')" id="deletepsat' + data[0] + '" class="delete"> Delete</a></li></span>';
                            $("#ulPSAT").append(v);
                        }
                        else {
                            var v = '<span id="ulPSAT"><span><li><a id="editpsat' + data[0] + '" href="javascript:OpenPSATEdit(' + data[0] + ')">PSAT-' + data[1] + '</a> <a href="javascript:PSATDelete(' + data[0] + ')" id="deletepsat' + data[0] + '" class="delete"> Delete</a></li></span></span>';
                            $("#ulPSAT").append(v);
                        }
                    }
                    else if (data[2] == "edit") {
                        $("#editpsat" + data[0]).text("PSAT-" + data[1]);
                        window.location.href = "/Student/EditProfile/Test";

                    }
                    else { }
                    $("#LoadingImage").hide();
                    $("#@Html.IdFor(m => m.testList.testPsat.Reading)").val("");
                    $("#@Html.IdFor(m => m.testList.testPsat.Math)").val("");
                    $("#@Html.IdFor(m => m.testList.testPsat.Writing)").val("");
                    $("#@Html.IdFor(m => m.testList.testPsat.Date)").val("");
                    $("#@Html.IdFor(m => m.testList.testPsat.StudentTestId)").val("0");
                    $("#divPSAT").hide();
                    $("#divPSAT").dialog('close');

                }
            });
        }
        return false;
    });

    function OpenPSATEdit(studentTestid) {
        var psat = {
            StudentTestid: studentTestid
        };
        $.ajax({
            type: "POST",
            beforeSend: function () { $("#LoadingImage").show(); },
            complete: function () { $("#LoadingImage").hide(); },
            url: "/Method/GetAP",
            data: JSON.stringify(psat),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (msg) {
                var data = msg;
                if (data != null) {
                    $("#@Html.IdFor(m => m.testList.testPsat.Reading)").val(data.Reading);
                    $("#@Html.IdFor(m => m.testList.testPsat.Math)").val(data.Math);
                    $("#@Html.IdFor(m => m.testList.testPsat.Writing)").val(data.Writing);
                    $("#@Html.IdFor(m => m.testList.testPsat.Date)").val(data.Date);
                    $("#@Html.IdFor(m => m.testList.testPsat.StudentTestId)").val(data.StudentTestId);
                    $("#divPSAT").dialog({ modal: true, minWidth: 577, resizable: false, minHeight: 390, closeOnEscape: true, closeText: "" });
                }
            },
            error: function (xhr, status, error) {
                alert(xhr.statusText);
            }
        });

    }

    function PSATDelete(studentTestid) {
        $("#dialog-confirm").dialog({
            open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
            resizable: false,
            height: 140, closeOnEscape: true,
            title: "Delete [PSAT]",
            modal: true,
            buttons: {
                "Yes": function () {
                    if (Page_IsValid) {
                        var psat = {
                            StudentTestid: studentTestid
                        };
                        $.ajax({
                            type: "POST",
                            beforeSend: function () { $("#LoadingImage").show(); },
                            complete: function () { $("#LoadingImage").hide(); },
                            url: "/Method/APDelete",
                            data: JSON.stringify(psat),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (msg) {
                                $("#deletepsat" + studentTestid).parent().remove();

                                if (msg) {
                                    //location.reload();
                                }
                            }
                        });
                    }
                    $(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    }
</script>

@*SAT - II*@
<script type="text/javascript">
    $("#btnSAT_IISave").click(function () {
        if ($("#frmSAT2").valid()) {
            var sat2 = {
                Testid: "12",
                Subject: $("#@Html.IdFor(m => m.testList.testSat2.Subject)").val(),
                Score: $("#@Html.IdFor(m => m.testList.testSat2.Score)").val(),
                Date: $("#@Html.IdFor(m => m.testList.testSat2.Date)").val(),
                StudentTestid: $("#@Html.IdFor(m => m.testList.testSat2.StudentTestId)").val()
            };
            $.ajax({
                type: "POST",
                beforeSend: function () { $("#LoadingImage").show(); },
                complete: function () { $("#LoadingImage").hide(); },
                url: "/Method/SAT2Save",
                data: JSON.stringify(sat2),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    $("#dialog-SaveTest").dialog({
                        open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
                        resizable: false,
                        height: 180, closeOnEscape: true,
                        modal: true,
                        buttons: {
                            "OK": function () {
                                $(this).dialog("close");
                            }

                        },
                    });

                    var data = msg;

                    if (data[2] == "add") {
                        if (document.getElementById("ulSAT2") != null) {
                            var v = '<br/><span><li><a id="editsat2' + data[0] + '" href="javascript:OpenSAT2Edit(' + data[0] + ')">SAT-II-' + data[1] + '</a> <a href="javascript:SAT2Delete(' + data[0] + ')" id="deletesat2' + data[0] + '" class="delete"> Delete</a></li></span>';
                            $("#ulSAT2").append(v);
                        }
                        else {
                            var v = '<span id="ulSAT2"><span><li><a id="editsat2' + data[0] + '" href="javascript:OpenSAT2Edit(' + data[0] + ')">SAT-II-' + data[1] + '</a> <a href="javascript:SAT2Delete(' + data[0] + ')" id="deletesat2' + data[0] + '" class="delete"> Delete</a></li></span></span>';
                            $("#ulSAT2").append(v);
                        }
                    }
                    else if (data[2] == "edit") {
                        $("#editsat2" + data[0]).text("SAT-II-" + data[1]);
                        window.location.href = "/Student/EditProfile/Test";

                    }
                    else { }
                    $("#LoadingImage").hide();
                    $("#@Html.IdFor(m => m.testList.testSat2.Subject)").val("");
                    $("#@Html.IdFor(m => m.testList.testSat2.Score)").val("");
                    $("#@Html.IdFor(m => m.testList.testSat2.Date)").val("");
                    $("#@Html.IdFor(m => m.testList.testSat2.StudentTestId)").val("0");
                    $("#divSAT2").hide();
                    $("#divSAT2").dialog('close');

                }
            });
        }
        return false;
    });

    function OpenSAT2Edit(studentTestid) {
        var sat2 = {
            StudentTestid: studentTestid
        };
        $.ajax({
            type: "POST",
            beforeSend: function () { $("#LoadingImage").show(); },
            complete: function () { $("#LoadingImage").hide(); },
            url: "/Method/GetAP",
            data: JSON.stringify(sat2),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (msg) {
                var data = msg;
                if (data != null) {
                    $("#@Html.IdFor(m => m.testList.testSat2.Subject)").val(data.Subject);
                    $("#@Html.IdFor(m => m.testList.testSat2.Score)").val(data.Score);
                    $("#@Html.IdFor(m => m.testList.testSat2.Date)").val(data.Date);
                    $("#@Html.IdFor(m => m.testList.testSat2.StudentTestId)").val(data.StudentTestId);
                    $("#divSAT2").dialog({ modal: true, minWidth: 577, resizable: false, minHeight: 390, closeOnEscape: true, closeText: "" });
                }
            },
            error: function (xhr, status, error) {
                alert(xhr.statusText);
            }
        });

    }

    function SAT2Delete(studentTestid) {
        $("#dialog-confirm").dialog({
            open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
            resizable: false,
            height: 140, closeOnEscape: true,
            title: "Delete [SAT-II]",
            modal: true,
            buttons: {
                "Yes": function () {
                    if (Page_IsValid) {
                        var sat2 = {
                            StudentTestid: studentTestid
                        };
                        $.ajax({
                            type: "POST",
                            beforeSend: function () { $("#LoadingImage").show(); },
                            complete: function () { $("#LoadingImage").hide(); },
                            url: "/Method/APDelete",
                            data: JSON.stringify(sat2),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (msg) {
                                $("#deletesat2" + studentTestid).parent().remove();

                                if (msg) {
                                    //location.reload();
                                }
                            }
                        });
                    }
                    $(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    }
</script>

@*TOEFL - Internet*@
<script type="text/javascript">
    $("#btnTOEFLInternetbasedSave").click(function () {
        if ($("#frmTOEFLI").valid()) {
            var toeflinternet = {
                Testid: "13",
                Reading: $("#@Html.IdFor(m => m.testList.testToeflI.Reading)").val(),
                Listening: $("#@Html.IdFor(m => m.testList.testToeflI.Listening)").val(),
                Speaking: $("#@Html.IdFor(m => m.testList.testToeflI.Speaking)").val(),
                Writing: $("#@Html.IdFor(m => m.testList.testToeflI.Writing)").val(),
                Total: $("#@Html.IdFor(m => m.testList.testToeflI.Total)").val(),
                Date: $("#@Html.IdFor(m => m.testList.testToeflI.Date)").val(),
                StudentTestid: $("#@Html.IdFor(m => m.testList.testToeflI.StudentTestId)").val()
            };
            $.ajax({
                type: "POST",
                beforeSend: function () { $("#LoadingImage").show(); },
                complete: function () { $("#LoadingImage").hide(); },
                url: "/Method/TOEFLInternetbasedSave",
                data: JSON.stringify(toeflinternet),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    $("#dialog-SaveTest").dialog({
                        open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
                        resizable: false,
                        height: 180,
                        modal: true, closeOnEscape: true,
                        buttons: {
                            "OK": function () {
                                $(this).dialog("close");
                            }

                        },
                    });

                    var data = msg;

                    if (data[2] == "add") {
                        if (document.getElementById("ulTOEFLInternetbased") != null) {
                            var v = '<br/><span><li><a id="edittoefli' + data[0] + '" href="javascript:OpenTOEFLInternetbasedEdit(' + data[0] + ')">TOEFLInternetbased-' + data[1] + '</a> <a href="javascript:TOEFLInternetbasedDelete(' + data[0] + ')" id="deletetoefli' + data[0] + '" class="delete"> Delete</a></li></span>';
                            $("#ulTOEFLInternetbased").append(v);
                        }
                        else {
                            var v = '<span id="ulTOEFLInternetbased"><span><li><a id="edittoefli' + data[0] + '" href="javascript:OpenTOEFLInternetbasedEdit(' + data[0] + ')">TOEFLInternetbased-' + data[1] + '</a> <a href="javascript:TOEFLInternetbasedDelete(' + data[0] + ')" id="deletetoefli' + data[0] + '"class="delete"> Delete</a></li></span></span>';
                            $("#ulTOEFLInternetbased").append(v);
                        }
                    }
                    else if (data[2] == "edit") {
                        $("#edittoefli" + data[0]).text("TOEFLInternetbased-" + data[1]);
                        window.location.href = "/Student/EditProfile/Test";

                    }
                    else { }
                    $("#LoadingImage").hide();
                    $("#@Html.IdFor(m => m.testList.testToeflI.Reading)").val("");
                    $("#@Html.IdFor(m => m.testList.testToeflI.Listening)").val("");
                    $("#@Html.IdFor(m => m.testList.testToeflI.Speaking)").val("");
                    $("#@Html.IdFor(m => m.testList.testToeflI.Writing)").val("");
                    $("#@Html.IdFor(m => m.testList.testToeflI.Total)").val("");
                    $("#@Html.IdFor(m => m.testList.testToeflI.Date)").val("");
                    $("#@Html.IdFor(m => m.testList.testToeflI.StudentTestId)").val("0");
                    $("#divTOEFLInternetbased").hide();
                    $("#divTOEFLInternetbased").dialog('close');

                }
            });
        }
        return false;
    });

    function OpenTOEFLInternetbasedEdit(studentTestid) {
        var toeflinternet = {
            StudentTestid: studentTestid
        };
        $.ajax({
            type: "POST",
            beforeSend: function () { $("#LoadingImage").show(); },
            complete: function () { $("#LoadingImage").hide(); },
            url: "/Method/GetAP",
            data: JSON.stringify(toeflinternet),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (msg) {
                var data = msg;
                if (data != null) {
                    $("#@Html.IdFor(m => m.testList.testToeflI.Reading)").val(data.Reading);
                    $("#@Html.IdFor(m => m.testList.testToeflI.Listening)").val(data.Listening);
                    $("#@Html.IdFor(m => m.testList.testToeflI.Speaking)").val(data.Speaking);
                    $("#@Html.IdFor(m => m.testList.testToeflI.Writing)").val(data.Writing);
                    $("#@Html.IdFor(m => m.testList.testToeflI.Total)").val(data.Total);
                    $("#@Html.IdFor(m => m.testList.testToeflI.Date)").val(data.Date);
                    $("#@Html.IdFor(m => m.testList.testToeflI.StudentTestId)").val(data.StudentTestId);
                    $("#divTOEFLInternetbased").dialog({ modal: true, minWidth: 577, resizable: false, minHeight: 390, closeOnEscape: true, closeText: "" });
                }
            },
            error: function (xhr, status, error) {
                alert(xhr.statusText);
            }
        });

    }

    function TOEFLInternetbasedDelete(studentTestid) {
        $("#dialog-confirm").dialog({
            open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
            resizable: false,
            height: 140, closeOnEscape: true,
            title: "Delete [TOEFLInternetbased]",
            modal: true,
            buttons: {
                "Yes": function () {
                    if (Page_IsValid) {
                        var toeflinternet = {
                            StudentTestid: studentTestid
                        };
                        $.ajax({
                            type: "POST",
                            beforeSend: function () { $("#LoadingImage").show(); },
                            complete: function () { $("#LoadingImage").hide(); },
                            url: "/Method/APDelete",
                            data: JSON.stringify(toeflinternet),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (msg) {
                                $("#deletetoefli" + studentTestid).parent().remove();

                                if (msg) {
                                    //location.reload();
                                }
                            }
                        });
                    }
                    $(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    }
</script>

@*TOEFL - Paper based*@
<script type="text/javascript">
    $("#btnTOEFLPaperbasedSave").click(function () {
        if ($("#frmTOEFLP").valid()) {
            var toeflpaper = {
                Testid: "14",
                Reading: $("#@Html.IdFor(m => m.testList.testToeflP.Reading)").val(),
                Listening: $("#@Html.IdFor(m => m.testList.testToeflP.Listening)").val(),
                Speaking: $("#@Html.IdFor(m => m.testList.testToeflP.Speaking)").val(),
                Writing: $("#@Html.IdFor(m => m.testList.testToeflP.Writing)").val(),
                Total: $("#@Html.IdFor(m => m.testList.testToeflP.Total)").val(),
                Date: $("#@Html.IdFor(m => m.testList.testToeflP.Date)").val(),
                StudentTestid: $("#@Html.IdFor(m => m.testList.testToeflP.StudentTestId)").val()
            };
            $.ajax({
                type: "POST",
                beforeSend: function () { $("#LoadingImage").show(); },
                complete: function () { $("#LoadingImage").hide(); },
                url: "/Method/TOEFLPaperbasedSave",
                data: JSON.stringify(toeflpaper),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    $("#dialog-SaveTest").dialog({
                        open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
                        resizable: false,
                        height: 180, closeOnEscape: true,
                        modal: true,
                        buttons: {
                            "OK": function () {
                                $(this).dialog("close");
                            }

                        },
                    });

                    var data = msg;

                    if (data[2] == "add") {
                        if (document.getElementById("ulTOEFLPaperbased") != null) {
                            var v = '<br/><span><li><a id="edittoeflp' + data[0] + '" href="javascript:OpenTOEFLPaperbasedEdit(' + data[0] + ')">TOEFLPaperbased-' + data[1] + '</a> <a href="javascript:TOEFLTOEFLPaperbasedDelete(' + data[0] + ')" id="deletetoeflp' + data[0] + '" class="delete"> Delete</a></li></span>';
                            $("#ulTOEFLPaperbased").append(v);
                        }
                        else {
                            var v = '<span id="ulTOEFLPaperbased"><span><li><a id="edittoeflp' + data[0] + '" href="javascript:OpenTOEFLPaperbasedEdit(' + data[0] + ')">TOEFLPaperbased-' + data[1] + '</a> <a href="javascript:TOEFLPaperbasedDelete(' + data[0] + ')" id="deletetoeflp' + data[0] + '" class="delete"> Delete</a></li></span></span>';
                            $("#ulTOEFLPaperbased").append(v);
                        }
                    }
                    else if (data[2] == "edit") {
                        $("#edittoeflp" + data[0]).text("TOEFLPaperbased-" + data[1]);
                        window.location.href = "/Student/EditProfile/Test";

                    }
                    else { }
                    $("#LoadingImage").hide();
                    $("#@Html.IdFor(m => m.testList.testToeflP.Reading)").val("");
                    $("#@Html.IdFor(m => m.testList.testToeflP.Listening)").val("");
                    $("#@Html.IdFor(m => m.testList.testToeflP.Speaking)").val("");
                    $("#@Html.IdFor(m => m.testList.testToeflP.Writing)").val("");
                    $("#@Html.IdFor(m => m.testList.testToeflP.Total)").val("");
                    $("#@Html.IdFor(m => m.testList.testToeflP.Date)").val("");
                    $("#@Html.IdFor(m => m.testList.testToeflP.StudentTestId)").val("0");
                    $("#divTOEFLPaperbased").hide();
                    $("#divTOEFLPaperbased").dialog('close');

                }
            });
        }
        return false;
    });

    function OpenTOEFLPaperbasedEdit(studentTestid) {
        var toeflpaper = {
            StudentTestid: studentTestid
        };
        $.ajax({
            type: "POST",
            beforeSend: function () { $("#LoadingImage").show(); },
            complete: function () { $("#LoadingImage").hide(); },
            url: "/Method/GetAP",
            data: JSON.stringify(toeflpaper),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (msg) {
                var data = msg;
                if (data != null) {
                    $("#@Html.IdFor(m => m.testList.testToeflP.Reading)").val(data.Reading);
                    $("#@Html.IdFor(m => m.testList.testToeflP.Listening)").val(data.Listening);
                    $("#@Html.IdFor(m => m.testList.testToeflP.Speaking)").val(data.Speaking);
                    $("#@Html.IdFor(m => m.testList.testToeflP.Writing)").val(data.Writing);
                    $("#@Html.IdFor(m => m.testList.testToeflP.Total)").val(data.Total);
                    $("#@Html.IdFor(m => m.testList.testToeflP.Date)").val(data.Date);
                    $("#@Html.IdFor(m => m.testList.testToeflP.StudentTestId)").val(data.StudentTestId);
                    $("#divTOEFLPaperbased").dialog({ modal: true, minWidth: 577, resizable: false, minHeight: 390, closeOnEscape: true, closeText: "" });
                }
            },
            error: function (xhr, status, error) {
                alert(xhr.statusText);
            }
        });

    }

    function TOEFLPaperbasedDelete(studentTestid) {
        $("#dialog-confirm").dialog({
            open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
            resizable: false,
            height: 140, closeOnEscape: true,
            title: "Delete [TOEFLPaperbased]",
            modal: true,
            buttons: {
                "Yes": function () {
                    if (Page_IsValid) {
                        var toeflpaper = {
                            StudentTestid: studentTestid
                        };
                        $.ajax({
                            type: "POST",
                            beforeSend: function () { $("#LoadingImage").show(); },
                            complete: function () { $("#LoadingImage").hide(); },
                            url: "/Method/APDelete",
                            data: JSON.stringify(toeflpaper),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (msg) {
                                $("#deletetoeflp" + studentTestid).parent().remove();

                                if (msg) {
                                    //location.reload();
                                }
                            }
                        });
                    }
                    $(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    }
</script>
<script type="text/javascript">
    function confirmDelete() {
        if (confirm("Are you sure you want to delete this?") == true)
            return true;
        else
            return false;
    }

    function AcademicDelete(StudentWorkId, ele, schoolname) {
        $("#dialog-confirm").dialog({
            open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
            resizable: false,
            title: "Delete [" + schoolname + "]",
            height: 140, closeOnEscape: true,
            modal: true,
            buttons: {
                "Yes": function () {
                    if (Page_IsValid) {
                        var sat2 = {
                            StudentAcademicId: parseInt(StudentWorkId),
                        };
                        $.ajax({
                            type: "POST",
                            beforeSend: function () { $("#LoadingImage").show(); },
                            complete: function () { $("#LoadingImage").hide(); },
                            url: "/Student/AcademicDelete",
                            data: JSON.stringify(sat2),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (msg) {
                                $(ele).parent().parent().remove();

                                if (msg) {
                                    //location.reload();
                                }
                            }
                        });
                    }
                    $(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    }

    function WorkDelete(stduentWork, element, compname) {
        $("#dialog-confirm").dialog({
            open: function (event, ui) { $(".ui-dialog-titlebar-close .ui-button-text").hide(); },
            resizable: false,
            height: 140, closeOnEscape: true,
            title: "Delete [" + compname + "]",
            modal: true,
            buttons: {
                "Yes": function () {
                    if (Page_IsValid) {
                        var sat2 = {
                            StudentWorkId: parseInt(stduentWork),
                        };
                        $.ajax({
                            type: "POST",
                            beforeSend: function () { $("#LoadingImage").show(); },
                            complete: function () { $("#LoadingImage").hide(); },
                            url: "/Student/WorkHistoryDelete/",
                            data: JSON.stringify(sat2),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (msg) {
                                $(element).parent().parent().remove();

                                if (msg) {
                                    //location.reload();
                                }
                            }
                        });
                    }
                    $(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    }


</script>
